{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Introduction","text":"<p>The wiki is built with MkDocs and GitHub Pages. It supports inline PlantUML diagrams.</p> <p>Inspired by wiki.nikitavoloboev.xyz &amp; The Blue Book.</p>"},{"location":"#using-the-wiki","title":"Using the wiki","text":"<p>You can quickly search the contents of this wiki above or you can explore the tree view to the left.</p>"},{"location":"Applications/wallabag/","title":"Wallabag","text":""},{"location":"Applications/wallabag/#run-a-console-command-in-the-container","title":"Run a console command in the container","text":"<pre><code>docker exec -it &lt;containerName&gt; /var/www/wallabag/bin/console &lt;command&gt; --env=prod\n</code></pre>"},{"location":"Applications/wallabag/#list-commands","title":"List commands","text":"<pre><code>docker exec -it wallabag /var/www/wallabag/bin/console list --env=prod\n</code></pre>"},{"location":"Applications/wallabag/#get-help-for-a-command","title":"Get help for a command","text":"<pre><code>docker exec -it wallabag /var/www/wallabag/bin/console help &lt;command&gt; --env=prod\n</code></pre>"},{"location":"Applications/wallabag/#initialize-the-database","title":"Initialize the database","text":"<pre><code>docker exec -it wallabag /var/www/wallabag/bin/console wallabag:install --env=prod --no-interaction\n</code></pre>"},{"location":"Applications/wallabag/#list-users","title":"List users","text":"<pre><code>docker exec -it wallabag /var/www/wallabag/bin/console wallabag:user:list --env=prod\n</code></pre>"},{"location":"Applications/wallabag/#create-a-new-user","title":"Create a new user","text":"<pre><code>docker exec -it wallabag /var/www/wallabag/bin/console fos:user:create --env=prod\n</code></pre>"},{"location":"Applications/wallabag/#make-a-user-super-admin","title":"Make a user super admin","text":"<pre><code>docker exec -it wallabag /var/www/wallabag/bin/console fos:user:promote &lt;user&gt; --super --env=prod\n</code></pre>"},{"location":"Applications/wallabag/#demote-and-deactivate-the-initial-wallabag-user","title":"Demote and deactivate the initial wallabag user","text":"<pre><code>docker exec -it wallabag /var/www/wallabag/bin/console fos:user:demote wallabag --super --env=prod\ndocker exec -it wallabag /var/www/wallabag/bin/console fos:user:deactivate wallabag --env=prod\n</code></pre>"},{"location":"Blog/Misc/blog-gh-pages-mkdocs/","title":"How to create a blog with GitHub Pages and MkDocs","text":""},{"location":"Blog/Misc/blog-gh-pages-mkdocs/#dockerfile","title":"Dockerfile","text":"<p>Create the Containerfile at <code>Dockerfile</code> or <code>Containerfile</code>.</p> <pre><code>FROM docker.io/ubuntu:focal\n\nRUN : \\\n    &amp;&amp; apt-get update -y \\\n    &amp;&amp; apt-get install -y --no-install-recommends \\\n    python3 \\\n    python3-venv \\\n    python3-pip \\\n    &amp;&amp; rm -rf /var/lib/api/lists*\n\nWORKDIR /src\n\nCOPY requirements.txt .\nENV PATH = /venv/bin:$PATH\n\nRUN : \\\n    &amp;&amp; python3 -m venv /venv \\\n    &amp;&amp; python3 -m pip --no-cache-dir install -r requirements.txt\n\nCOPY . .\n\nWORKDIR /src/blog\n</code></pre>"},{"location":"Blog/Misc/blog-gh-pages-mkdocs/#taskfile","title":"Taskfile","text":"<p>To store some reoccuring tasks we use a Taskfile. To install Task use this link or just use <code>sudo sh -c \"$(curl --location https://taskfile.dev/install.sh)\" -- -d -b /usr/local/bin</code></p> <p>Create the <code>Taskfile.yml</code>.</p> <pre><code># https://taskfile.dev\n\nversion: \"3\"\n\nvars:\n  CONTAINER_NAME: blog.rwxd.eu\n  CURRENT_DIR:\n    sh: pwd\n  SITE_DIR: \"{{.CURRENT_DIR}}/docs/site\"\n\ntasks:\n  default:\n    cmds:\n      - task -l\n    silent: true\n\n  setup:\n    desc: Setup requirements\n    cmds:\n      - python3 -m pip install -r requirements.txt -q\n      - pre-commit install\n    silent: true\n\n  image:\n    desc: builds container image with name blog.rwxd.eu\n    cmds:\n      - podman build -t {{.CONTAINER_NAME}} -f ./Containerfile\n    silent: true\n\n  serve:\n    desc: Serve blog with a container\n    vars:\n      PORT: 8000\n      MOUNT: \"{{.CURRENT_DIR}}/src\"\n    cmds:\n      - task: image\n      - podman run --rm -p {{.PORT}}:8000 -v ./:/src {{.CONTAINER_NAME}} mkdocs serve\n    silent: true\n\n  serve-local:\n    desc: Serve blog local\n    dir: ./blog\n    cmds:\n      - mkdocs serve\n    silent: true\n\n  build:\n    desc: Build blog pages\n    cmds:\n      - task: image\n      - mkdir -p {{.SITE_DIR}}\n      - podman run --rm -v {{.SITE_DIR}}:/src/blog/site {{.CONTAINER_NAME}} sh -c \"mkdocs build\"\n</code></pre>"},{"location":"Blog/Misc/pluralsight_trial/","title":"Pluralsight demo / trial","text":"<p>Create a new Pluralsight Account with a one month demo trough Visual Studio Dev Essentials.</p> <ol> <li>Create a new Microsoft account with a Microsoft live email</li> <li>Activate PluralSight benefits</li> <li>Confirm the registration email</li> </ol>"},{"location":"Blog/Misc/sane-scanbd-canon-5600f/","title":"Sane &amp; scanbd with Canon CanonScan 5600f","text":""},{"location":"Blog/Misc/sane-scanbd-canon-5600f/#installation-on-a-raspbian","title":"Installation on a raspbian","text":"<pre><code>sudo apt install sane sane-utils sanebd\n</code></pre>"},{"location":"Blog/Misc/sane-scanbd-canon-5600f/#configuration","title":"Configuration","text":"<p>Copy sane configuration to scanbd.</p> <pre><code>cp -r /etc/sane.d/* /etc/scanbd/sane.d/\n</code></pre> <p>Modify <code>/etc/sane.d/dll.conf</code> so that only <code>net</code> is uncommented in the configuration.</p> <pre><code># genesys\nnet\n# canon\n</code></pre> <p>Test if the scanner is detected</p> <pre><code>SANE_CONFIG_DIR=/etc/scanbd scanimage -A\n</code></pre> <pre><code>root@scanner:/opt/insaned# SANE_CONFIG_DIR=/etc/scanbd scanimage -L\ndevice 'genesys:libusb:001:004' is a Canon CanoScan 5600F flatbed scanner\n</code></pre>"},{"location":"Blog/Misc/sane-scanbd-canon-5600f/#start-enable-the-service","title":"Start &amp; enable the service","text":"<pre><code>sudo systemctl start scanbd\nsudo systemctl enable scanbd\n</code></pre>"},{"location":"Blog/Misc/sane-scanbd-canon-5600f/#edit-the-button-configuration","title":"Edit the button configuration","text":"<p><code>/etc/scanbd/scanbd.conf</code></p> <p>The <code>scan</code> action runs the <code>test.script</code> per default. The path of the script or the content can be changed.</p> <pre><code>action scan {\n        filter = \"^scan.*\"\n        numerical-trigger {\n               from-value = 1\n               to-value   = 0\n               }\n        desc   = \"Scan to file\"\n        script = \"/usr/local/bin/scan-to-share\"\n       }\n</code></pre> <p>At the bottom</p> <pre><code># devices\n# each device can have actions and functions, you can disable not relevant devices\ninclude(scanner.d/canon.conf)\n</code></pre>"},{"location":"Blog/Misc/sane-scanbd-canon-5600f/#debugging","title":"Debugging","text":"<pre><code>systemctl stop scanbd\nSANE_CONFIG_DIR=/etc/scanbd scanbd -f\n</code></pre> <p>More verbose:</p> <pre><code>systemctl stop scanbd\nSANE_CONFIG_DIR=/etc/scanbd scanbd -f -d7\n</code></pre>"},{"location":"Blog/Misc/sane-scanbd-canon-5600f/#scan-script","title":"Scan script","text":"<pre><code>#!/usr/bin/env bash\nset -x -e -o pipefail\n\nlog_file=\"/var/scans/scan.log\"\necho \"Starting script\" &gt;&gt; \"$log_file\"\n\nresolution=300\nfile_ending=jpg\nformat=jpeg\nmode=color\n\nfile_data=$(date +'%Y_%m_%d-%H_%M_%S')\nfilename=\"$file_data.$file_ending\"\ntemp_path=\"/tmp/$filename\"\ndest_path=\"/var/scans/scanned/$file_data.pdf\"\n\necho \"Destination path \\\"$dest_path\\\"\" &gt;&gt; \"$log_file\"\necho \"Starting scan with resolution $resolution, format $format &amp; mode $mode\" &gt;&gt; \"$log_file\"\n\nexport SANE_CONFIG_DIR=/etc/scanbd\nscanimage --format \"$format\" --resolution=\"$resolution\" --mode \"$mode\" -v -p &gt; \"$temp_path\"\nimg2pdf \"$temp_path\" -o \"$dest_path\"\nrm \"$temp_path\"\nchmod 777 \"$dest_path\"\n</code></pre>"},{"location":"Books/done/","title":"Read books","text":""},{"location":"Books/done/#heavy-tech","title":"Heavy tech","text":""},{"location":"Books/done/#misc","title":"Misc","text":"<ul> <li>The Pragmatic Programmer: journey to mastery</li> </ul>"},{"location":"Books/reading-list/","title":"Reading list","text":""},{"location":"Books/reading-list/#technical","title":"Technical","text":"<ul> <li>Writing An Interpreter In Go</li> <li>Writing A Compiler In Go</li> <li>Designing Data-Intensive Applications: The Big Ideas Behind Reliable, Scalable, and Maintainable Systems</li> <li>System Design Interview</li> <li>Grokking Continuous Delivery</li> </ul>"},{"location":"Books/reading-list/#misc","title":"Misc","text":"<ul> <li>Staff Engineer: Leadership beyond the management track</li> </ul>"},{"location":"CTFs/overthewire/bandit/","title":"Bandit","text":"<p>Bandit</p>"},{"location":"CTFs/overthewire/bandit/#level-0","title":"Level 0","text":"<p>just login <code>ssh bandit0@bandit.labs.overthewire.org -p 2220</code> and password <code>bandit0</code></p>"},{"location":"CTFs/overthewire/bandit/#level-0-1","title":"Level 0 -&gt; 1","text":"<p>Password for level 2 is in the <code>~/readme</code> file.</p> <pre><code>bandit0@bandit:~$ cat readme\nboJ9jbbUNNfktd78OOpsqOltutMc3MY1\n</code></pre>"},{"location":"CTFs/overthewire/bandit/#level-1-2","title":"Level 1 -&gt; 2","text":"<pre><code>bandit1@bandit:~$ cat \"./-\"\nCV1DtqXWVFXTvM2F0k09SHz0YwRINYA9\n</code></pre>"},{"location":"CTFs/overthewire/bandit/#level-2-3","title":"Level 2 -&gt; 3","text":"<pre><code>bandit2@bandit:~$ cat ./spaces\\ in\\ this\\ filename\nUmHadQclWmgdLOKQ3YNgjWxGoRMb5luK\n</code></pre>"},{"location":"CTFs/overthewire/bandit/#level-3-4","title":"Level 3 -&gt; 4","text":"<pre><code>bandit3@bandit:~$ cat inhere/.hidden\npIwrPrtPN36QITSp3EQaw936yaFoFgAB\n</code></pre>"},{"location":"CTFs/overthewire/bandit/#level-4-5","title":"Level 4 -&gt; 5","text":"<pre><code>bandit4@bandit:~$ find inhere/ -type f | xargs file | grep tex\ninhere/-file07: ASCII text\nbandit4@bandit:~$ cat inhere/-file07\nkoReBOKuIDDepwhWk7jZC0RTdopnAYKh\n</code></pre>"},{"location":"CTFs/overthewire/bandit/#level-5-6","title":"Level 5 -&gt; 6","text":"<pre><code>bandit5@bandit:~$ find inhere/ -type f -size 1033c ! -executable | xargs file | grep text \ninhere/maybehere07/.file2: ASCII text, with very long lines\nbandit5@bandit:~$ cat inhere/maybehere07/.file2\nDXjZPULLxYr17uwoI01bNLQbtFemEgo7\n</code></pre>"},{"location":"CTFs/overthewire/bandit/#level-6-7","title":"Level 6 -&gt; 7","text":"<pre><code>bandit6@bandit:~$ find / -user bandit7 -group bandit6 -size 33c 2&gt;/dev/null | xargs cat\nHKBPTKQnIay4Fw76bEy8PVxKEDQRKTzs\n</code></pre>"},{"location":"CTFs/overthewire/bandit/#level-7-8","title":"Level 7 -&gt; 8","text":"<pre><code>bandit7@bandit:~$ cat data.txt | grep \"millionth\" | sed \"s/millionth\\s*//g\"\ncvX2JJa4CFALtqS87jk27qwqGhBM9plV\n</code></pre>"},{"location":"CTFs/overthewire/bandit/#level-8-9","title":"Level 8 -&gt; 9","text":"<pre><code>bandit8@bandit:~$ sort data.txt | uniq -c | grep \"1\\s\"\n      1 UsvVyFSfZZWbi6wgC7dAFyFuR6jQQUhR\n</code></pre>"},{"location":"CTFs/overthewire/bandit/#level-9-10","title":"Level 9 -&gt; 10","text":"<pre><code>bandit9@bandit:~$ strings data.txt | grep -E \"=+\"\n========== the*2i\"4\n=:G e\n========== password\n&lt;I=zsGi\nZ)========== is\nA=|t&amp;E\nZdb=\nc^ LAh=3G\n*SF=s\n&amp;========== truKLdjsbJ5g7yyJ2X2R0o3a5HQJFuLk\nS=A.H&amp;^\n</code></pre>"},{"location":"CTFs/overthewire/bandit/#level-10-11","title":"Level 10 -&gt; 11","text":"<pre><code>bandit10@bandit:~$ cat data.txt | base64 -d | sed \"s/The\\spassword\\sis\\s\\(.*\\)/\\1/g\"\nIFukwKGsFW8MOq3IRFqrxE1hxTNEbUPR\n</code></pre>"},{"location":"CTFs/overthewire/bandit/#level-11-12","title":"Level 11 -&gt; 12","text":"<pre><code>bandit11@bandit:~$ cat data.txt | tr \"a-zA-Z\" \"n-za-mN-ZA-M\"\nThe password is 5Te8Y4drgCRfCx8ugdwuEX8KFC6k2EUu\n</code></pre>"},{"location":"CTFs/overthewire/bandit/#level-12-13","title":"Level 12 -&gt; 13","text":"<pre><code>bandit12@bandit:~$ mkdir -p /tmp/abcdef &amp;&amp; cd !$\nbandit12@bandit:/tmp/abcdef$ xxd -r ~/data.txt data.txt\n\nbandit12@bandit:/tmp/abcdef$ file data.txt\ndata.txt: gzip compressed data, was \"data2.bin\", last modified: Thu May  7 18:14:30 2020, max compression, from Unix\nbandit12@bandit:/tmp/abcdef$ mv data.txt data.gz\nbandit12@bandit:/tmp/abcdef$ gzip -d data.gz\n\nbandit12@bandit:/tmp/abcdef$ file data\ndata: bzip2 compressed data, block size = 900k\nbandit12@bandit:/tmp/abcdef$ mv data data.bz2\nbandit12@bandit:/tmp/abcdef$ bzip2 -d data.bz2\n\nbandit12@bandit:/tmp/abcdef$ file data\ndata: gzip compressed data, was \"data4.bin\", last modified: Thu May  7 18:14:30 2020, max compression, from Unix\nbandit12@bandit:/tmp/abcdef$ mv data data.gz\n\nbandit12@bandit:/tmp/abcdef$ gzip -d data.gz\nbandit12@bandit:/tmp/abcdef$ file data\ndata: POSIX tar archive (GNU)\n\nbandit12@bandit:/tmp/abcdef$ mv data data.tar\nbandit12@bandit:/tmp/abcdef$ tar xvf data.tar\ndata5.bin\n\nbandit12@bandit:/tmp/abcdef$ file data5.bin\ndata5.bin: POSIX tar archive (GNU)\nbandit12@bandit:/tmp/abcdef$ tar xvf data6.bin\ndata8.bin\n\nbandit12@bandit:/tmp/abcdef$ file data8.bin\ndata8.bin: gzip compressed data, was \"data9.bin\", last modified: Thu May  7 18:14:30 2020, max compression, from Unix\nbandit12@bandit:/tmp/abcdef$ mv data8.bin data8.gz\nbandit12@bandit:/tmp/abcdef$ gzip -d data8.gz\n\nbandit12@bandit:/tmp/abcdef$ file data8\ndata8: ASCII text\nbandit12@bandit:/tmp/abcdef$ cat data8\nThe password is 8ZjyCRiBWFYkneahHwxCv3wb2a1ORpYL\n</code></pre>"},{"location":"CTFs/overthewire/bandit/#level-13-14","title":"Level 13 -&gt; 14","text":"<pre><code>bandit13@bandit:~$ eval $(ssh-agent)\nAgent pid 20358\nbandit13@bandit:~$ ssh-add sshkey.private\nIdentity added: sshkey.private (sshkey.private)\nbandit13@bandit:~$ ssh bandit14@localhost\n</code></pre>"},{"location":"CTFs/overthewire/bandit/#level-14-15","title":"Level 14 -&gt; 15","text":"<pre><code>bandit14@bandit:~$ cat /etc/bandit_pass/bandit14 | netcat localhost 30000\nCorrect!\nBfMYroe26WYalil77FoDi9qh59eK5xNr\n</code></pre>"},{"location":"CTFs/overthewire/bandit/#level-15-16","title":"Level 15 -&gt; 16","text":"<pre><code>bandit15@bandit:~$ man openssl s_client\nbandit15@bandit:~$ openssl s_client -connect localhost:30001\nbandit15@bandit:~$ echo \"BfMYroe26WYalil77FoDi9qh59eK5xNr\" | openssl s_client -connect localhost:30001 -ign_eof\n---\nCorrect!\ncluFn7wTiGryunymYOu4RcffSxQluehd\n</code></pre>"},{"location":"CTFs/overthewire/bandit/#level-16-17","title":"Level 16 -&gt; 17","text":"<pre><code>bandit16@bandit:~$ nmap -sV -p 31000-32000 localhost\n\nStarting Nmap 7.40 ( https://nmap.org ) at 2022-04-11 21:16 CEST\nNmap scan report for localhost (127.0.0.1)\nHost is up (0.00024s latency).\nNot shown: 996 closed ports\nPORT      STATE SERVICE     VERSION\n31046/tcp open  echo\n31518/tcp open  ssl/echo\n31691/tcp open  echo\n31790/tcp open  ssl/unknown\n31960/tcp open  echo\n\nbandit16@bandit:~$ echo \"cluFn7wTiGryunymYOu4RcffSxQluehd\" | openssl s_client --connect localhost:31790 -ign_eof\n</code></pre>"},{"location":"DevOps/Continuous-Integration/Ansible/ansible-runner/","title":"ansible-runner","text":""},{"location":"DevOps/Continuous-Integration/Ansible/ansible-runner/#usage","title":"Usage","text":"<p>Run with docker as process isolation</p> <p><code>ansible-runner run demo -m debug --hosts localhost -a msg=hello --container-image quay.io/ansible/awx-ee -vvvv --process-isolation --process-isolation-executable=docker</code></p>"},{"location":"DevOps/Continuous-Integration/Ansible/ansible-runner/#links","title":"Links","text":"<ul> <li>Using Runner with Execution Environments</li> </ul>"},{"location":"DevOps/Continuous-Integration/Ansible/molecule/","title":"Ansible Molecule","text":"<p>The molecule project helps to develop and test Ansible roles.</p> <p><code>python3 -m pip install molecule</code></p>"},{"location":"DevOps/Continuous-Integration/Ansible/molecule/#usage","title":"Usage","text":"<p>Generate a new role <code>molecule init role &lt;name&gt;</code></p> <p>Init in existing role <code>molecule init scenario</code></p> <p>List drivers <code>molecule drivers</code></p>"},{"location":"DevOps/Continuous-Integration/Ansible/Ansible%20Code%20Snippets/Wait%20for%20X/","title":"Wait for a connection after e. g. a reboot","text":"<pre><code>- name: Wait for port 22\n  wait_for:\n    host: \"{{ ansible_host }}\"\n    port: 22\n    state: started\n    delay: 10\n    sleep: 1\n    connect_timeout: 5\n    timeout: 900\n  delegate_to: 127.0.0.1\n</code></pre>"},{"location":"DevOps/Continuous-Integration/GitLab-CICD/clear_artifacts/","title":"Script to clear GitLab CI/CD Artifacts","text":"<pre><code>import requests\nimport json\n\nclass BearerAuth(requests.auth.AuthBase):\n    def __init__(self, token):\n        self.token = token\n    def __call__(self, r):\n        r.headers[\"authorization\"] = \"Bearer \" + self.token\n        return r\n\nproject = '804'\ntoken='ijuiosjdiof'\n\nfor page in range(1, 200):\n    url = f'https://gitlab.com/api/v4/projects/{project}/jobs?per_page=100&amp;page={page}'\n    print(f'Getting jobs from {url}')\n    response = requests.get(url, auth=BearerAuth(token))\n\n    data= json.loads(response.text)\n\n    for item in data:\n        url=f'https://gitlab.com/api/v4/projects/{project}/jobs/{item[\"id\"]}/artifacts'\n        print(f'Running on {url}')\n        response = requests.delete(url, auth=BearerAuth(token))\n</code></pre>"},{"location":"DevOps/Infrastructure-Solutions/Container/Docker/docker-commands/","title":"Docker commands","text":""},{"location":"DevOps/Infrastructure-Solutions/Container/Docker/docker-commands/#stop-things","title":"Stop things","text":""},{"location":"DevOps/Infrastructure-Solutions/Container/Docker/docker-commands/#stop-all-containers","title":"Stop all containers","text":"<pre><code>docker stop $(docker ps -aq)\n</code></pre>"},{"location":"DevOps/Infrastructure-Solutions/Container/Docker/docker-commands/#remove-things","title":"Remove things","text":""},{"location":"DevOps/Infrastructure-Solutions/Container/Docker/docker-commands/#remove-all-containers","title":"Remove all containers","text":"<pre><code>docker rm $(docker ps -aq)\n</code></pre>"},{"location":"DevOps/Infrastructure-Solutions/Container/Docker/docker-commands/#remove-stop-all-containers","title":"Remove &amp; stop all containers","text":"<pre><code>docker rm -f $(docker ps -aq)\n</code></pre>"},{"location":"DevOps/Infrastructure-Solutions/Container/Docker/docker-commands/#all-images","title":"All Images","text":"<pre><code>docker rmi $(docker images -q)\n</code></pre>"},{"location":"DevOps/Infrastructure-Solutions/Container/Docker/docker-commands/#start-docker-daemon-in-debug-mode","title":"Start docker daemon in debug mode","text":"<pre><code>sudo dockerd --debug\n</code></pre>"},{"location":"DevOps/Infrastructure-Solutions/Container/Docker/docker-ipv6/","title":"Docker with IPv6","text":""},{"location":"DevOps/Infrastructure-Solutions/Container/Docker/docker-ipv6/#setup","title":"Setup","text":"<p>Test with a busybox container <code>docker run --rm -it busybox sh</code></p>"},{"location":"DevOps/Infrastructure-Solutions/Container/Docker/ssh-keys/","title":"SSH-Keys in a Dockerfile Build","text":""},{"location":"DevOps/Infrastructure-Solutions/Container/Docker/ssh-keys/#python","title":"Python","text":"<p>```Dockerfile</p>"},{"location":"DevOps/Infrastructure-Solutions/Container/Docker/ssh-keys/#install-pip-requirements","title":"install pip requirements","text":"<p>SHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"] RUN : \\     &amp;&amp; eval \"$(ssh-agent -s)\"\\     &amp;&amp; mkdir -p /root/.ssh \\     &amp;&amp; chmod 0700 /root/.ssh \\     &amp;&amp; echo ${GITLAB_SSH_PRIVATE_KEY} | base64 -d &gt;&gt; /root/.ssh/id_rsa \\     &amp;&amp; chmod 0700 /root/.ssh/id_rsa \\     &amp;&amp; ssh-add /root/.ssh/id_rsa \\     &amp;&amp; ssh-keyscan gitlab.com &gt;&gt; /root/.ssh/known_hosts \\     &amp;&amp; chmod 0644 /root/.ssh/known_hosts \\     &amp;&amp; python3 -m venv /venv \\     &amp;&amp; python3 -m pip install --no-cache-dir -r requirements.txt \\     &amp;&amp; rm -f /root/.ssh/id_rsa</p>"},{"location":"DevOps/Infrastructure-Solutions/Container/Kubernetes/ckad/","title":"CKAD - Certified Kubernetes Application Developer","text":""},{"location":"DevOps/Infrastructure-Solutions/Container/Kubernetes/ckad/#books","title":"Books","text":"<ul> <li>Kubernetes in Action by Marko Luksa</li> </ul>"},{"location":"DevOps/Infrastructure-Solutions/Container/Kubernetes/ckad/#free-labs","title":"Free Labs","text":"<ul> <li>https://killercoda.com/killer-shell-ckad</li> <li>https://killercoda.com/killer-shell-cka</li> <li>https://killercoda.com/kubernetes</li> </ul>"},{"location":"DevOps/Infrastructure-Solutions/Container/Kubernetes/ckad/#free-playground","title":"Free Playground","text":"<ul> <li>https://killercoda.com/playgrounds/scenario/ckad</li> </ul>"},{"location":"DevOps/Infrastructure-Solutions/Container/Kubernetes/ckad/#ckad-exam-labs","title":"CKAD Exam Labs","text":"<ul> <li>killer.sh - 2 free labs, with the purchase of the exam</li> </ul>"},{"location":"DevOps/Infrastructure-Solutions/Container/Kubernetes/K3S/Install%20K3S%20on%20Raspberry%20PIs/","title":"Manager","text":""},{"location":"DevOps/Infrastructure-Solutions/Container/Kubernetes/K3S/Install%20K3S%20on%20Raspberry%20PIs/#with-traefik","title":"With Traefik","text":"<pre><code>curl -sfL https://get.k3s.io | sh -s - --write-kubeconfig-mode 644\n</code></pre>"},{"location":"DevOps/Infrastructure-Solutions/Container/Kubernetes/K3S/Install%20K3S%20on%20Raspberry%20PIs/#without-traefik","title":"Without Traefik","text":"<pre><code>curl -sfL https://get.k3s.io | INSTALL_K3S_EXEC=\"--no-deploy traefik\" sh -s - --write-kubeconfig-mode 644\n</code></pre> <p>Get a token for the worker nodes</p> <pre><code>sudo cat /var/lib/rancher/k3s/server/token\n</code></pre>"},{"location":"DevOps/Infrastructure-Solutions/Container/Kubernetes/K3S/Install%20K3S%20on%20Raspberry%20PIs/#worker-node","title":"Worker Node","text":"<p>Set the K3S Token</p> <pre><code>export K3S_TOKEN=blablabla\n</code></pre> <pre><code>curl -sfL https://get.k3s.io | K3S_URL=https://manager01.fritz.box:6443 K3S_TOKEN=$K3S_TOKEN sh -\n</code></pre> <p>Generate kubeconfig</p>"},{"location":"DevOps/Infrastructure-Solutions/Container/Kubernetes/K3S/Install%20K3S%20on%20Raspberry%20PIs/#create-a-service-account-for-kubectl","title":"Create a Service Account for kubectl","text":"<pre><code>kubectl -n default apply -f - &lt;&lt;EOF\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: home-computer\nEOF\n\nkubectl -n default apply -f - &lt;&lt;EOF\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRoleBinding\nmetadata:\n  name: gitlab-service-account-role-binding\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: cluster-admin\nsubjects:\n  - kind: ServiceAccount\n    name: home-computer\n    namespace: default\nEOF\n\nkubectl describe secret home-computer-token\n\nexport K8S_SERVER=\"https://192.168.2.31:6443\"\nexport K8S_CLUSTER=\"k3s-home\"\nexport K8S_USER=\"home-computer\"\nexport K8S_USER_TOKEN=\"blabla\" \n\nkubectl config set-cluster $K8S_CLUSTER --server=$K8S_SERVER --insecure-skip-tls-verify=true\nkubectl config set-credentials $K8S_USER --token=$K8S_USER_TOKEN\nkubectl config set-context $K8S_CLUSTER --cluster=$K8S_CLUSTER --user=$K8S_USER\nkubectl config use-context $K8S_CLUSTER\n</code></pre>"},{"location":"DevOps/Infrastructure-Solutions/Container/Kubernetes/K3S/raspberry/","title":"K3s on Raspberry","text":""},{"location":"DevOps/Infrastructure-Solutions/Container/Kubernetes/K3S/raspberry/#errors","title":"Errors","text":""},{"location":"DevOps/Infrastructure-Solutions/Container/Kubernetes/K3S/raspberry/#failed-to-find-memory-cgroup-you-may-need-to-add","title":"Failed to find memory cgroup, you may need to add...","text":"<p>Solution</p> <pre><code>sudo vim /boot/firmware/cmdline.txt\n</code></pre> <p>Add <code>cgroup_enable=cpuset cgroup_enable=memory cgroup_memory=1</code> into end of the file.</p>"},{"location":"DevOps/Infrastructure-Solutions/Container/Kubernetes/K3S/raspberry/#links","title":"Links","text":"<ul> <li>k3s on pi error - cgroup_memory=1 cgroup_enable=memory</li> </ul>"},{"location":"DevOps/Infrastructure-Solutions/Container/Kubernetes/Networking/kube-vip/","title":"Kube-VIP","text":"<p>The hybrid mode works for the control plane and kubernetes service https://kube-vip.io/hybrid/</p>"},{"location":"DevOps/Infrastructure-Solutions/Container/Kubernetes/Networking/metallb/","title":"MetalLB","text":""},{"location":"DevOps/Infrastructure-Solutions/Container/Kubernetes/Networking/metallb/#install-with-kubectl","title":"Install with kubectl","text":"<p>https://metallb.universe.tf/installation/</p> <pre><code>kubectl apply -f https://raw.githubusercontent.com/metallb/metallb/v0.10.2/manifests/namespace.yaml kubectl apply -f https://raw.githubusercontent.com/metallb/metallb/v0.10.2/manifests/metallb.yaml\n</code></pre>"},{"location":"DevOps/Infrastructure-Solutions/Container/Kubernetes/Networking/metallb/#config","title":"config","text":"<pre><code>apiVersion: v1\nkind: ConfigMap\nmetadata:\n  namespace: metallb-system\n  name: config\ndata:\n  config: |\n    address-pools:\n    - name: default\n      protocol: layer2\n      addresses:\n      - 192.168.3.200-192.168.3.250\n</code></pre>"},{"location":"DevOps/Infrastructure-Solutions/Container/Kubernetes/Networking/metallb/#install-with-terraform","title":"Install with Terraform","text":"<pre><code>resource \"kubernetes_namespace\" \"metallb\" {\n  metadata {\n    name = \"metallb\"\n  }\n}\n\nresource \"helm_release\" \"metallb\" {\n  name       = \"metallb\"\n  repository = \"https://metallb.github.io/metallb\"\n  chart      = \"metallb\"\n  namespace  = \"metallb\"\n\n  depends_on = [kubernetes_namespace.metallb]\n\n  set {\n    name  = \"configInline.address-pools[0].name\"\n    value = \"default\"\n    type  = \"string\"\n  }\n\n  set {\n    name  = \"configInline.address-pools[0].protocol\"\n    value = \"layer2\"\n    type  = \"string\"\n  }\n\n  set {\n    name  = \"configInline.address-pools[0].addresses[0]\"\n    value = \"192.168.3.200-192.168.3.250\"\n    type  = \"string\"\n  }\n}\n</code></pre>"},{"location":"DevOps/Infrastructure-Solutions/Container/Kubernetes/Tanzu-Kubernetes-Cluster/kubectl-vsphere/","title":"Kubectl vSphere","text":""},{"location":"DevOps/Infrastructure-Solutions/Container/Kubernetes/Tanzu-Kubernetes-Cluster/kubectl-vsphere/#usage","title":"Usage","text":"<p>Login to a cluster ``</p>"},{"location":"DevOps/Infrastructure-Solutions/Container/Kubernetes/Tanzu-Kubernetes-Cluster/kubectl-vsphere/#links","title":"Links","text":""},{"location":"DevOps/Infrastructure-Solutions/Container/Kubernetes/kubectl/CronJob/","title":"Test CronJob","text":"<p><code>kubectl create job --from=cronjob/&lt;name&gt; &lt;new-pod-name&gt;</code></p>"},{"location":"DevOps/Infrastructure-Solutions/Container/Kubernetes/kubectl/CronJob/#example","title":"Example","text":"<p><code>kubectl create job --from=cronjob/check-job test-job-1</code></p>"},{"location":"DevOps/Infrastructure-Solutions/Container/Kubernetes/kubectl/busybox/","title":"Busybox","text":"<p><code>kubectl run -i --tty --rm debug --image=busybox --restart=Never -- sh</code></p>"},{"location":"DevOps/Infrastructure-Solutions/Container/Kubernetes/kubectl/delete/","title":"delete all pods from a namespace that are in Error Status","text":"<pre><code>NAMESPACE=test &amp;&amp; kubectl get pods -n $NAMESPACE | grep Error | cut -d' ' -f 1 | xargs kubectl delete pod -n $NAMESPACE\n</code></pre>"},{"location":"DevOps/Infrastructure-Solutions/Container/Kubernetes/kubectl/label/","title":"nodes","text":""},{"location":"DevOps/Infrastructure-Solutions/Container/Kubernetes/kubectl/label/#add-node-label","title":"add node label","text":"<p><code>kubectl label node node01 node-role.kubernetes.io/name</code></p>"},{"location":"DevOps/Infrastructure-Solutions/Container/Kubernetes/kubectl/label/#delete-node-label","title":"delete node label","text":"<p><code>kubectl label node node01 node-role.kubernetes.io/name-</code></p>"},{"location":"DevOps/Infrastructure-Solutions/Container/Kubernetes/kubectl/serviceaccount/","title":"ServiceAccounts","text":""},{"location":"DevOps/Infrastructure-Solutions/Container/Kubernetes/kubectl/serviceaccount/#create-a-serviceaccount","title":"Create a ServiceAccount","text":"<p>gitlab-service-account.yml with ClusterRoleBinding</p> <pre><code>---\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: gitlab-service-account\n\n---\napiVersion: rbac.authorization.k8s.io/v1beta1\nkind: ClusterRoleBinding\nmetadata:\n  name: gitlab-service-account-role-binding\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: cluster-admin\nsubjects:\n  - kind: ServiceAccount\n    name: gitlab-service-account\n    namespace: default\n</code></pre> <p>gitlab-service-account.yml with RoleBinding</p> <pre><code>---\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: gitlab-service-account\n  namespace: &lt;KUBE_NAMESPACE&gt;\n\n---\nkind: Role\napiVersion: rbac.authorization.k8s.io/v1beta1\nmetadata:\n  name: cicd-role\n  namespace: &lt;KUBE_NAMESPACE&gt;\nrules:\n- apiGroups:\n  - \"\"\n  - apps\n  - extensions\n  resources:\n  - '*'\n  verbs:\n  - '*'\n\n---\nkind: RoleBinding\napiVersion: rbac.authorization.k8s.io/v1beta1\nmetadata:\n  name: cicd-role\n  namespace: &lt;KUBE_NAMESPACE&gt;\nsubjects:\n  - kind: ServiceAccount\n    name: gitlab-service-account\nroleRef:\n  kind: Role\n  name: cicd-role\n  apiGroup: rbac.authorization.k8s.io\n</code></pre>"},{"location":"DevOps/Infrastructure-Solutions/Container/Kubernetes/kubectl/serviceaccount/#get-the-created-token","title":"Get the created token","text":"<pre><code>kubectl -n &lt;KUBE_NAMESPACE&gt; describe secret gitlab-service-account-token-\n</code></pre> <pre><code>export K8S_SERVER=\"https://10.24.1.1:6443\"\nexport K8S_CLUSTER=\"gitlab-test\"\nexport K8S_USER=\"gitlab-service-account\"\nexport K8S_USER_TOKEN=\"\"\n\nkubectl config set-cluster $K8S_CLUSTER --server=$K8S_SERVER --insecure-skip-tls-verify=true\nkubectl config set-credentials $K8S_USER --token=$K8S_USER_TOKEN\nkubectl config set-context $K8S_CLUSTER --cluster=$K8S_CLUSTER --user=$K8S_USER\nkubectl config use-context $K8S_CLUSTER\n</code></pre>"},{"location":"DevOps/Infrastructure-Solutions/Container/additional/Traefik/Excluding/","title":"Excluding","text":"<pre><code>services:\n  whoami:\n    image: \"traefik/whoami\"\n    container_name: \"whoami-test\"\n    labels:\n      - \"traefik.enable=true\"\n      - \"traefik.http.routers.whoami-test.rule=Host(`whoami-test.fritz.box`)\"\n      - \"traefik.http.routers.whoami-test.entrypoints=http\"\n      - \"traefik.http.routers.whoami-test.middlewares=intern_whitelist\"\n      - \"traefik.http.middlewares.intern_whitelist.ipwhitelist.sourcerange=192.168.2.0/23\"\n      - \"traefik.http.middlewares.intern_whitelist.ipwhitelist.ipstrategy.excludedips=192.168.2.1, 192.168.2.124\"\n</code></pre>"},{"location":"DevOps/Infrastructure-Solutions/Container/additional/Traefik/External%20Services/","title":"External Services","text":"<pre><code>http:\n  routers:\n    intern: {}\n      entryPoints:\n        - \"http\"\n        - \"https\"\n      rule: \"Host(`HostRegexp(`fritz.box`, `{subdomain:[a-z]+}.fritz.box`, ...)`)\"\n    pihole:\n      entryPoints:\n        - \"http\"\n        - \"https\"\n      rule: \"Host(`pihole.fritz.box`)\"\n      service: pihole\n      middlewares:\n        - addprefix-pihole\n  services:\n    pihole:\n      loadBalancer:\n        servers:\n          - url: \"http://192.168.2.19:80\"\n        passHostHeader: true\n  middlewares:\n    addprefix-pihole:\n      addPrefix:\n        prefix: \"/admin\"\n</code></pre>"},{"location":"DevOps/Infrastructure-as-Code/ArgoCD/Setup%20Argo%20CD%20with%20a%20Helm%20Charts%20Repository/","title":"Install Argo CD","text":"<p>Getting Started Guide</p> <pre><code>kubectl create namespace argocd \nkubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml\n</code></pre> <p>Download Argo CD CLI</p> <p>Create a load balancer to use the API Server</p> <pre><code>kubectl patch svc argocd-server -n argocd -p '{\"spec\": {\"type\": \"LoadBalancer\"}}'\n</code></pre> <p>Get the initial admin secrets <pre><code>kubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath=\"{.data.password}\" | base64 -d\n</code></pre></p>"},{"location":"Math/Books/konkrete-mathematik-mit-python/","title":"Bearbeitung der Aufgaben von <code>Konkrete Mathematik mit Python</code>","text":""},{"location":"Math/Books/konkrete-mathematik-mit-python/#15","title":"15","text":"<pre><code>def potenz(a: int, b: int) -&gt; int:\n    p = 1\n    while b &gt; 0:\n        p *= a\n        b -= 1\n    return p\n\nassert potenz(2, 2) == 4\nassert potenz(3, 3) == 27\nassert potenz(3, 0) == 1\n</code></pre>"},{"location":"Math/Books/konkrete-mathematik-mit-python/#17","title":"17","text":""},{"location":"Math/Discrete%20Math/Sets/","title":"Set-builder notation","text":"<p>The set of all \\(x\\) in \\(S\\) such that \\(P(x)\\) is true -&gt; \\(\\{ x \\in S | P(x) \\}\\)</p>"},{"location":"Networking/Cumulus%20Linux/about-cumulus-linux/","title":"About Cumulus Linux","text":""},{"location":"Networking/Misc/nfcapd/","title":"NFCAPD (NetFlow Capture Daemon)","text":""},{"location":"Networking/Misc/nfcapd/#show-running-captures","title":"Show running captures","text":"<pre><code>sudo ps -e -o command | grep nfcapd\n</code></pre>"},{"location":"Networking/Misc/nfcapd/#edit-configuration","title":"Edit configuration","text":"<p>Find the nfsen configuration first</p> <pre><code>sudo find / -type f -name \"nfsen.conf\"\n</code></pre> <pre><code>vim /opt/etc/nfsen.conf\n</code></pre>"},{"location":"Networking/Misc/nfcapd/#links","title":"Links","text":"<ul> <li>https://manpages.ubuntu.com/manpages/bionic/man1/nfcapd.1.html</li> </ul>"},{"location":"Networking/NSX-T/NSX-T%20Links/","title":"NSX-T Links","text":"<ul> <li>NSX-T Ninja</li> <li>Command Reference from Simon Greaves</li> </ul>"},{"location":"Networking/Virtualization/network-virtualization/","title":"Network Virtualization","text":"<p>Network virtualization is the carving up of a single physical network into many virtual networks. Virtualizing a resource allows it to be shared by multiple users. Sharing allows the efficient use of a resource when no single user can utilize the entire resource.</p> <p>Virtualization affords each user the illusion that they own the resource. In the case of virtual networks, each user is under the illusion that there are no other users of the network. To preserve the illusion, virtual networks are isolated from one another. Packets cannot accidentally leak from one virtual network to another.</p>"},{"location":"Networking/Virtualization/network-virtualization/#links","title":"Links:","text":"<ul> <li>Network Virtualization</li> </ul>"},{"location":"Networking/Virtualization/VXLAN/vxlan-general/","title":"VXLAN General","text":"<p>VXLAN (Virtual Extensible LAN) is a standard overlay protocol that abstracts logical virtual networks from the physical network underneath. With VXLAN simple and scalable layer 3 Clos architectures can be deployed, while extending layer 2 segments over that layer 3 network. VTEPs (VXLAN Tunnel Endpoints) are the tunnel edges. </p> <p>VXLAN uses a VLAN-like encapsulation technique to encapsulate MAC-based layer 2 Ethernet frames within layer 3 UDP packets Each virtual network is a VXLAN logical layer 2 segment. VXLAN scales to 16 million segments - a 24-bit VXLAN network identifier (VNI ID) in the VXLAN header - for multi-tenancy.</p> <p>In a large VXLAN deployment, two aspects need attention: 1. discovery of other endpoints (VTEPs) sharing the same VXLAN segments 2. avoidance of BUM frames (broadcast, unknown unicast and multicast) as they have to be forwarded to all VTEPs.</p> <p>On Cumulus Linux each VXLAN is locally configured using a bridge for local virtual interfaces. The bridge is taking care of the local MAC addresses (notably, using source-address learning) and the VXLAN interface takes care of the remote MAC addresses (received with BGP EVPN).</p>"},{"location":"Networking/Virtualization/VXLAN/vxlan-general/#links","title":"Links:","text":"<ul> <li>Network Virtualization</li> </ul>"},{"location":"Networking/cisco/ios/acl/","title":"Cisco IOS ACL","text":""},{"location":"Networking/cisco/ios/acl/#resequence-entries","title":"Resequence Entries","text":""},{"location":"Networking/cisco/ios/acl/#before","title":"Before","text":"<pre><code>Extended IP access list TEST\n    2 permit ip host 10.10.10.1 host 10.10.10.2\n    3 permit ip host 10.10.10.3 host 10.10.10.4\n</code></pre>"},{"location":"Networking/cisco/ios/acl/#command","title":"Command","text":"<pre><code>ip access-list resequence TEST 10 10\n</code></pre>"},{"location":"Networking/cisco/ios/acl/#after","title":"After","text":"<pre><code>Extended IP access list TEST\n    10 permit ip host 10.10.10.1 host 10.10.10.2\n    20 permit ip host 10.10.10.3 host 10.10.10.4\n</code></pre>"},{"location":"Networking/containerlab/cumulus/","title":"Cumulus on Containerlab","text":""},{"location":"Networking/containerlab/cumulus/#usage","title":"Usage","text":""},{"location":"Networking/containerlab/cumulus/#cvx","title":"CVX","text":"<p>Container Image: docker.io/networkop/cx:5.1.0 Username: root Password: root</p>"},{"location":"Networking/containerlab/ssh/","title":"SSH into Containerlab devices","text":""},{"location":"Networking/containerlab/ssh/#ssh-config","title":"SSH Config","text":"<p><code>$HOME/.ssh/config</code></p> <pre><code>host clab-*\n    StrictHostKeyChecking no\n    UserKnownHostsFile /dev/null\n</code></pre>"},{"location":"Networking/vyos/install/","title":"Install vyos","text":""},{"location":"Networking/vyos/install/#download-live-image","title":"Download live image","text":"<p>Nightly builds</p>"},{"location":"Networking/vyos/install/#install-permanent-on-disk","title":"Install permanent on disk","text":"<pre><code>vyos@vyos:~$ install image\n</code></pre>"},{"location":"Operating-Systems/Android/apps/shelter/","title":"Shelter","text":"<p>Shelter is a Free and Open-Source (FOSS) app that leverages the \"Work Profile\" feature of Android to provide an isolated space that you can install or clone apps into. https://github.com/PeterCxy/Shelter</p>"},{"location":"Operating-Systems/Android/apps/shelter/#links","title":"Links","text":"<ul> <li>F-Droid Package</li> </ul>"},{"location":"Operating-Systems/Linux/X-Forwarding/","title":"X-Forwarding with Windows through SSH","text":""},{"location":"Operating-Systems/Linux/X-Forwarding/#setup","title":"Setup","text":"<p>Install VcXsrv</p> <p>Start <code>XLaunch</code> with enabled clipboard and monitor 1</p> <p>Set the Windows environment variable <code>DISPLAY=\"127.0.0.1:1.0\"</code></p> <p>Connect through SSH with the <code>-Y</code> option.</p>"},{"location":"Operating-Systems/Linux/X-Forwarding/#check-if-it-works","title":"Check if it works","text":"<p>Linux script to check working connection:</p> <pre><code>#!/usr/bin/env bash\n\nif ! timeout 3s xset q &amp;&gt;/dev/null; then\n    echo \"No X server at \\$DISPLAY [$DISPLAY]\" &gt;&amp;2\n    exit 1\nfi\n\necho \"Seems to work :)\"\n</code></pre>"},{"location":"Operating-Systems/Linux/CLI/htpasswd/","title":"htpasswd","text":""},{"location":"Operating-Systems/Linux/CLI/htpasswd/#hash-bcrypt-with-input","title":"Hash BCrypt with input","text":"<pre><code>htpasswd -B -n username\n</code></pre>"},{"location":"Operating-Systems/Linux/CLI/htpasswd/#run-with-a-container","title":"Run with a container","text":"<pre><code>docker run --rm -it httpd:latest htpasswd -B -n username\n</code></pre>"},{"location":"Operating-Systems/Linux/CLI/iotop/","title":"iotop","text":""},{"location":"Operating-Systems/Linux/CLI/iotop/#watch-processes-accumulated","title":"Watch processes accumulated","text":"<pre><code>iotop -aoP\n</code></pre>"},{"location":"Operating-Systems/Linux/CLI/nmap/","title":"NMAP","text":""},{"location":"Operating-Systems/Linux/CLI/nmap/#scan-network-for-host-with-open-ssh-port","title":"Scan network for host with open ssh port","text":""},{"location":"Operating-Systems/Linux/CLI/ssh/","title":"SSH","text":""},{"location":"Operating-Systems/Linux/CLI/ssh/#socks-proxy","title":"SOCKS Proxy","text":"<pre><code>ssh -D 1337 -C $USER@&lt;target&gt;\n</code></pre>"},{"location":"Operating-Systems/Linux/CLI/tee/","title":"Tee","text":"<p>With <code>tee</code> it is possible to read from standard input and write to standard output and files (or commands) at the same time.</p>"},{"location":"Operating-Systems/Linux/CLI/tee/#usage","title":"Usage","text":"<p>Log into file and stdout: <code>foo | tee output.file</code></p> <p>Append to a file: <code>foo | tee -a output.file</code></p> <p>Include stderr: <code>foo 2&gt;&amp;1 | tee output.file</code></p> <p><code>2&gt;&amp;1</code> redirects channel 2 (stderr/standard error) into channel 1 (stdout/standard output), such that both is written as stdout</p>"},{"location":"Operating-Systems/Linux/CLI/watch/","title":"watch","text":"<p>Execute a program periodically, showing output in fullscreen.</p>"},{"location":"Operating-Systems/Linux/CLI/watch/#usage","title":"Usage","text":"<p><code>watch du -sh file</code></p> <p>Custom interval in seconds (defaults to every 2 seconds): <code>watch -n 1 du -sh file</code></p>"},{"location":"Operating-Systems/Linux/Misc/NetworkManager/","title":"NetworkManager","text":""},{"location":"Operating-Systems/Linux/Misc/NetworkManager/#wlan","title":"WLAN","text":""},{"location":"Operating-Systems/Linux/Misc/NetworkManager/#autoconnect","title":"Autoconnect","text":"<pre><code>nmcli connection modify &lt;name&gt; connection.autoconnect yes\n</code></pre> <pre><code>nmcli connection modify &lt;name&gt; 802-11-wireless-security.psk &lt;psk&gt;\n</code></pre> <pre><code>nmcli connection up &lt;name&gt;\n</code></pre>"},{"location":"Operating-Systems/Linux/Misc/Time/","title":"Time","text":""},{"location":"Operating-Systems/Linux/Misc/Time/#list-timezone","title":"List timezone","text":"<p><code>timedatectl list-timezones</code></p>"},{"location":"Operating-Systems/Linux/Misc/Time/#change-timezone","title":"Change timezone","text":"<p><code>sudo timedatectl set-timezone Europe/Berlin</code></p>"},{"location":"Operating-Systems/Linux/Misc/cron/","title":"Cron","text":""},{"location":"Operating-Systems/Linux/Misc/cron/#cron-with-error-mails","title":"Cron with error mails","text":"<p>Install chronic</p> <pre><code>apt install moreutils\n</code></pre> <p>/etc/cron.d/01-example-cron</p> <pre><code>#!/usr/bin/env bash\nSHELL=/bin/bash\nPATH=/sbin:/bin:/usr/sbin:/usr/bin/usr/local/bin\nMAILTO=root,my-mail@example.org\n\n0 0 * * * root chronic /usr/local/bin/backup\n</code></pre>"},{"location":"Operating-Systems/Linux/Misc/cryptsetup/","title":"Cryptsetup","text":"<pre><code># format the disk with the luks structure\ncryptsetup luksFormat /dev/sda4\n\n# open the encrypted partition and map it to /dev/mapper/cryptroot\ncryptsetup luksOpen /dev/sda4 cryptroot\n\n# format as usual\nmkfs.ext4 -L nixos /dev/mapper/cryptroot\n</code></pre>"},{"location":"Operating-Systems/Linux/Misc/window-names/","title":"Show window names","text":"<p>Run the following command, after that click on a window to see its name</p> <pre><code>xprop | grep \"NAME\"\n</code></pre>"},{"location":"Operating-Systems/Linux/Misc/window-names/#example","title":"Example","text":"<pre><code>\u276f xprop | grep \"NAME\"\nWM_NAME(STRING) = \"Spotify\"\n_NET_WM_NAME(UTF8_STRING) = \"Spotify\"\n</code></pre>"},{"location":"Operating-Systems/Linux/Networking/Bridge%20Interface/","title":"Create a bridge interface","text":""},{"location":"Operating-Systems/Linux/Networking/Bridge%20Interface/#with-iproute2","title":"With iproute2","text":"<p>Create a new bridge <code>ip link add name bridge_name type bridge</code></p> <p>Set interface to state up <code>ip link set bridge_name up</code></p> <p>Add an interface to the bridge (state of the interface must be up) <code>ip link set eth0 master bridge_name</code></p> <p>Verify bridge <code>bridge link</code></p> <p>Remove interace from a bridge <code>ip link set eth0 nomaster</code></p>"},{"location":"Operating-Systems/Linux/Networking/Bridge%20Interface/#internet-settings","title":"Internet settings","text":"<p>Edit file <code>/etc/systemd/network/mybridge.network</code> <pre><code>[Match]\nName=br0\n\n[Network]\nDHCP=ipv4\n</code></pre></p> <p>Enable, start and reload systemd-networkd <pre><code>sudo systemctl enable systemd-networkd\nsudo systemctl start systemd-networkd\nsudo systemctl reload systemd-networkd\n</code></pre></p>"},{"location":"Operating-Systems/Linux/Networking/dns/","title":"DNS","text":""},{"location":"Operating-Systems/Linux/Networking/dns/#find-local-dns-resolver","title":"Find local DNS resolver","text":"<pre><code>sudo lsof -i :53 -S\n</code></pre>"},{"location":"Operating-Systems/Linux/PulseAudio/Volume/","title":"PulseAudio Volume Stuff","text":""},{"location":"Operating-Systems/Linux/PulseAudio/Volume/#find-devices","title":"Find devices","text":"<p><code>t=$(pacmd list-sinks &amp;&amp; pacmd list-sinks &amp;&amp; pacmd list-sources) &amp;&amp; echo $t | grep \"name:\"</code></p>"},{"location":"Operating-Systems/Linux/PulseAudio/Volume/#raise-microphone-volume-with-pacmd","title":"Raise microphone volume with pacmd","text":"<p><code>pacmd set-source-volume alsa_input.usb-Burr-Brown_from_TI_USB_Audio_CODEC-00.analog-stereo 0x25000</code></p>"},{"location":"Operating-Systems/Linux/Window-Manager/i3/bluetooth/","title":"Bluetooth with i3","text":"<p>Install blueman</p> <p>Launch the graphical settings with <code>blueman-manager</code></p>"},{"location":"Operating-Systems/Linux/Window-Manager/i3/dpi/","title":"Change i3 DPI / scaling","text":"<p>put the following configuration into <code>~/.Xresources</code></p> <pre><code>Xft.dpi: 150\n</code></pre> <p>load settings <pre><code>xrdb -merge ~/.Xresources\nexec i3\n</code></pre></p>"},{"location":"Operating-Systems/Linux/Window-Manager/i3/i3-wallpaper/","title":"Wallpaper in i3","text":"<p>feh can be used to display a wallpaper.</p> <p>Define the following in the i3 config file to use a random wallpaper from the path <code>~/wallpaper/</code>.</p> <pre><code>exec --no-startup-id feh --bg-scale --random ~/wallpaper/\n</code></pre>"},{"location":"Operating-Systems/Linux/Window-Manager/i3/spotify/","title":"Control Spotify in i3","text":"<pre><code># spotify player controls\nbindsym XF86AudioPlay exec \"dbus-send --print-reply --dest=org.mpris.MediaPlayer2.spotify /org/mpris/MediaPlayer2 org.mpris.MediaPlayer2.Player.PlayPause\"\nbindsym XF86AudioStop exec \"dbus-send --print-reply --dest=org.mpris.MediaPlayer2.spotify /org/mpris/MediaPlayer2 org.mpris.MediaPlayer2.Player.Stop\"\nbindsym XF86AudioPrev exec \"dbus-send --print-reply --dest=org.mpris.MediaPlayer2.spotify /org/mpris/MediaPlayer2 org.mpris.MediaPlayer2.Player.Previous\"\nbindsym XF86AudioNext exec \"dbus-send --print-reply --dest=org.mpris.MediaPlayer2.spotify /org/mpris/MediaPlayer2 org.mpris.MediaPlayer2.Player.Next\"\n</code></pre>"},{"location":"Operating-Systems/Linux/Window-Manager/i3/volume/","title":"Volume Control in i3","text":"<p>A graphical control for PulseAudio is <code>pavucontrol</code>.</p>"},{"location":"Operating-Systems/Linux/Window-Manager/i3/volume/#keys","title":"Keys","text":"<pre><code># Use pactl to adjust volume in PulseAudio.\nset $refresh_i3status killall -SIGUSR1 i3status\nbindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +5% &amp;&amp; $refresh_i3status\nbindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -5% &amp;&amp; $refresh_i3status\nbindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle &amp;&amp; $refresh_i3status\nbindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle &amp;&amp; $refresh_i3status\n</code></pre>"},{"location":"Operating-Systems/Linux/nix/nixpkgs/","title":"nixpkgs","text":""},{"location":"Operating-Systems/Linux/nix/nixpkgs/#get-github-checksums","title":"Get GitHub checksums","text":"<pre><code>nix-prefetch-url --unpack https://github.com/catppuccin/bat/archive/f0dedf515c02799b76a2804db9815a479f6c0075.zip\n</code></pre> <pre><code>REPO=\"\"\n</code></pre> <pre><code>rm -rf /tmp/repo-check\ngit clone --depth 1 \"$REPO\" /tmp/repo-check\ngit -C /tmp/repo-check rev-parse HEAD\nrm -rf /tmp/repo-check/.git\nnix hash path /tmp/repo-check\n</code></pre> <pre><code>fetchFromGitHub {\n  owner = \"owner\";\n  repo = \"repo\";\n  rev = \"65bb66d364e0d10d00bd848a3d35e2755654655b\";\n  hash = \"sha256-8EUDsWeTeZwJNrtjEsUNLMt9I9mjabPRBZG83u7xtPw=\";\n}\n</code></pre>"},{"location":"Operating-Systems/Linux/nix/nixpkgs/#build","title":"Build","text":"<pre><code>nix-build -E 'with import &lt;nixpkgs&gt; {}; callPackage ./default.nix {}'\n</code></pre>"},{"location":"Operating-Systems/Linux/nix/nixpkgs/#test-install","title":"Test-Install","text":"<pre><code>nix-env -iA &lt;package&gt; -f &lt;path to repo&gt;\n</code></pre>"},{"location":"Operating-Systems/Linux/nix/nixpkgs/#submitting-changes","title":"Submitting Changes","text":"<p>https://nixos.org/manual/nixpkgs/stable/#chap-submitting-changes</p>"},{"location":"Operating-Systems/Linux/nix/nixpkgs/#maintainer","title":"Maintainer","text":"<p>Add yourself to the <code>nixpkgs/maintainers/maintainer-list.nix</code> file.</p> <p>Format</p> <pre><code>handle = {\n  # Required\n  name = \"Your name\";\n  email = \"address@example.org\";\n  # Optional\n  matrix = \"@user:example.org\";\n  github = \"GithubUsername\";\n  githubId = your-github-id;\n  keys = [{\n    longkeyid = \"rsa2048/0x0123456789ABCDEF\";\n    fingerprint = \"AAAA BBBB CCCC DDDD EEEE  FFFF 0000 1111 2222 3333\";\n  }];\n};\n</code></pre>"},{"location":"Operating-Systems/Linux/security/selinux/","title":"SELinux","text":""},{"location":"Operating-Systems/Linux/security/selinux/#commands","title":"Commands","text":"<p>See SELinux booleans</p> <pre><code>getsebool -a\n</code></pre> <p>Get messages since 14:05</p> <pre><code>journalctl -t setroubleshoot --since=14:05\n</code></pre>"},{"location":"Operating-Systems/Linux/security/selinux/#inspection","title":"Inspection","text":"<p>Inspect a AVC message</p> <pre><code>sealert -l [message_ID]\n</code></pre>"},{"location":"Operating-Systems/Linux/security/selinux/#flags","title":"Flags","text":"<pre><code>chcon\nrestorecron\n</code></pre>"},{"location":"Operating-Systems/Linux/security/firewall/firewalld/","title":"firewalld","text":""},{"location":"Operating-Systems/Linux/security/firewall/firewalld/#zones","title":"Zones","text":""},{"location":"Operating-Systems/Linux/security/firewall/firewalld/#list-zones","title":"List Zones","text":"<pre><code>firewall-cmd --get-active-zones\n</code></pre>"},{"location":"Operating-Systems/Linux/security/firewall/firewalld/#rules","title":"Rules","text":""},{"location":"Operating-Systems/Linux/security/firewall/firewalld/#ports","title":"Ports","text":"<pre><code>firewall-cmd --permanent --zone=public --add-port=25565/tcp --add-port=19132/udp\n</code></pre> <p>Port Range</p> <pre><code>firewall-cmd --permanent --zone=public --add-port=40000-40030/udp\n</code></pre>"},{"location":"Operating-Systems/Linux/security/firewall/firewalld/#remove-ports","title":"Remove Ports","text":"<pre><code>firewall-cmd --permanent --zone=public --remove-port=25565/tcp --remove-port=19132/udp\n</code></pre> <p>Port Range</p> <pre><code>firewall-cmd --permanent --zone=public --remove-port=40000-40030/udp\n</code></pre>"},{"location":"Operating-Systems/Linux/security/firewall/ufw/","title":"UFW","text":""},{"location":"Operating-Systems/Linux/security/firewall/ufw/#get-status","title":"Get status","text":"<pre><code>ufw status verbose\n</code></pre>"},{"location":"Operating-Systems/Linux/security/firewall/ufw/#rules","title":"Rules","text":""},{"location":"Operating-Systems/Linux/security/firewall/ufw/#ports","title":"Ports","text":"<pre><code>ufw allow 22/tcp\n````\n\n```bash\nufw deny 80/tcp\n````\n\n### Remove Ports\n\n```bash\nufw delete allow 22/tcp\n</code></pre>"},{"location":"Operating-Systems/Linux/security/firewall/ufw/#block-all-incoming-traffic","title":"Block all incoming traffic","text":"<pre><code>ufw default deny incoming\n</code></pre>"},{"location":"Other/20%20rules%20of%20formulating%20knowledge/","title":"20 rules of formulating knowledge","text":"<p>Effective learning: Twenty rules of formulating knowledge</p>"},{"location":"Other/20%20rules%20of%20formulating%20knowledge/#1-do-not-learn-if-you-dont-understand","title":"1. Do not learn if you don't understand","text":""},{"location":"Other/20%20rules%20of%20formulating%20knowledge/#2-learn-before-you-memorize","title":"2. Learn before you memorize","text":"<p>You need to build an overall picture of the learned knowledge in order to memorize it. Do not start from memorizing loosely related facts!</p>"},{"location":"Other/20%20rules%20of%20formulating%20knowledge/#3-build-upon-the-basics","title":"3. Build upon the basics","text":""},{"location":"Other/20%20rules%20of%20formulating%20knowledge/#4-stick-to-the-minimum-information-principle","title":"4. Stick to the minimum information principle","text":"<p>The material you learn must be formulated in as simple way at is is.</p>"},{"location":"Other/20%20rules%20of%20formulating%20knowledge/#5-cloze-deletion-is-easy-and-effective","title":"5. Cloze deletion is easy and effective","text":"<p>Cloze deletion is a sentence with its parts missing and replaced by three dots.</p>"},{"location":"Other/20%20rules%20of%20formulating%20knowledge/#6-use-imagery","title":"6. Use Imagery","text":""},{"location":"Other/20%20rules%20of%20formulating%20knowledge/#7-use-mnemonic-techniques","title":"7. Use mnemonic techniques","text":""},{"location":"Other/20%20rules%20of%20formulating%20knowledge/#8-graphic-deletions-is-as-good-as-cloze-deletion","title":"8. Graphic deletions is as good as cloze deletion","text":""},{"location":"Other/20%20rules%20of%20formulating%20knowledge/#9-avoid-sets","title":"9. Avoid sets","text":""},{"location":"Other/20%20rules%20of%20formulating%20knowledge/#10-avoid-enumeration","title":"10. Avoid enumeration","text":""},{"location":"Other/20%20rules%20of%20formulating%20knowledge/#11-combat-interference","title":"11. Combat interference","text":"<p>When you learn about similar things you often confuse them. You need to make items as unambiguous as possible.</p>"},{"location":"Other/20%20rules%20of%20formulating%20knowledge/#12-optimized-wording","title":"12. Optimized wording","text":""},{"location":"Other/20%20rules%20of%20formulating%20knowledge/#13-refer-to-other-memories","title":"13. Refer to other memories","text":""},{"location":"Other/20%20rules%20of%20formulating%20knowledge/#14-personalize-and-provide-examples","title":"14. Personalize and provide examples","text":""},{"location":"Other/20%20rules%20of%20formulating%20knowledge/#15-rely-on-emotional-states","title":"15. Rely on emotional states","text":""},{"location":"Other/20%20rules%20of%20formulating%20knowledge/#16-context-cues-simplify-wording","title":"16. Context cues simplify wording","text":""},{"location":"Other/20%20rules%20of%20formulating%20knowledge/#17-redundancy-does-not-contradict-minimum-information-principle","title":"17. Redundancy does not contradict minimum information principle","text":""},{"location":"Other/20%20rules%20of%20formulating%20knowledge/#18-provide-sources","title":"18. Provide sources","text":""},{"location":"Other/20%20rules%20of%20formulating%20knowledge/#19-provide-data-stamping","title":"19. Provide data stamping","text":""},{"location":"Other/20%20rules%20of%20formulating%20knowledge/#20-prioritize","title":"20 Prioritize","text":""},{"location":"Other/20%20rules%20of%20formulating%20knowledge/#summary","title":"Summary","text":"<ol> <li>Do not learn if you do not understand</li> <li>Learn before you memorize - build the picture of the whole before you dismember it into simple items in SuperMemo. If the whole shows holes, review it again!</li> <li>Build upon the basics - never jump both feet into a complex manual because you may never see the end. Well remembered basics will help the remaining knowledge easily fit in</li> <li>Stick to the minimum information principle - if you continue forgetting an item, try to make it as simple as possible. If it does not help, see the remaining rules (cloze deletion, graphics, mnemonic techniques, converting sets into enumerations, etc.)</li> <li>Cloze deletion is easy and effective - completing a deleted word or phrase is not only an effective way of learning. Most of all, it greatly speeds up formulating knowledge and is highly recommended for beginners</li> <li>Use imagery - a picture is worth a thousand words</li> <li>Use mnemonic techniques - read about peg lists and mind maps. Study the books by Tony Buzan. Learn how to convert memories into funny pictures. You won't have problems with phone numbers and complex figures</li> <li>Graphic deletion is as good as cloze deletion - obstructing parts of a picture is great for learning anatomy, geography and more</li> <li>Avoid sets - larger sets are virtually un-memorizable unless you convert them into enumerations!</li> <li>Avoid enumerations - enumerations are also hard to remember but can be dealt with using cloze deletion</li> <li>Combat interference - even the simplest items can be completely intractable if they are similar to other items. Use examples, context cues, vivid illustrations, refer to emotions, and to your personal life</li> <li>Optimize wording - like you reduce mathematical equations, you can reduce complex sentences into smart, compact and enjoyable maxims</li> <li>Refer to other memories - building memories on other memories generates a coherent and hermetic structure that forgetting is less likely to affect. Build upon the basics and use planned redundancy to fill in the gaps</li> <li>Personalize and provide examples - personalization might be the most effective way of building upon other memories. Your personal life is a gold mine of facts and events to refer to. As long as you build a collection for yourself, use personalization richly to build upon well established memories</li> <li>Rely on emotional states - emotions are related to memories. If you learn a fact in the sate of sadness, you are more likely to recall it if when you are sad. Some memories can induce emotions and help you employ this property of the brain in remembering</li> <li>Context cues simplify wording - providing context is a way of simplifying memories, building upon earlier knowledge and avoiding interference</li> <li>Redundancy does not contradict minimum information principle - some forms of redundancy are welcome. There is little harm in memorizing the same fact as viewed from different angles. Passive and active approach is particularly practicable in learning word-pairs. Memorizing derivation steps in problem solving is a way towards boosting your intellectual powers!</li> <li>Provide sources - sources help you manage the learning process, updating your knowledge, judging its reliability, or importance</li> <li>Provide date stamping - time stamping is useful for volatile knowledge that changes in time</li> <li>Prioritize - effective learning is all about prioritizing. In incremental reading you can start from badly formulated knowledge and improve its shape as you proceed with learning (in proportion to the cost of inappropriate formulation). If need be, you can review pieces of knowledge again, split it into parts, reformulate, reprioritize, or delete. See also: Incremental reading, Devouring knowledge, Flow of knowledge, Using tasklists</li> </ol>"},{"location":"Other/DuckDNS%20update%20or%20set%20IP%20script/","title":"DuckDNS update or set IP script","text":"<pre><code>import json\nimport urllib.request as requests\n\nconfig = {\n    \"token\": \"blabla\",\n    \"duck_domain\": \"cloud-test\",\n    \"ipv4\": True,\n    \"ipv6\": True\n    }\n\nipv4URL = 'https://ipv4.ipleak.net/json/'\nipv6URL = 'https://ipv6.ipleak.net/json/'\n\nif config[\"ipv4\"]:\n    request = requests.urlopen(ipv4URL)\n    data = json.load(request)\n    print(f'IPv4: {json.dumps(data[\"ip\"], indent=2)}')\n\n    request = requests.urlopen(f'https://www.duckdns.org/update?domains={config[\"duck_domain\"]}&amp;token={config[\"token\"]}&amp;ip={data[\"ip\"]}')\n    if request.status != 200:\n        print(request.msg)\n\n\nif config[\"ipv6\"]:\n    request = requests.urlopen(ipv6URL)\n    data = json.load(request)\n    print(f'IPv6: {json.dumps(data[\"ip\"], indent=2)}')\n\n    request = requests.urlopen(f'https://www.duckdns.org/update?domains={config[\"duck_domain\"]}&amp;token={config[\"token\"]}&amp;ipv6={data[\"ip\"]}')\n    if request.status != 200:\n        print(request.msg)\n</code></pre>"},{"location":"Other/digital-gardening/","title":"Digital Gardening","text":""},{"location":"Other/digital-gardening/#links","title":"Links","text":"<ul> <li>How the blog broke the web</li> </ul>"},{"location":"Programming/general/stack/","title":"What is a stack?","text":"<p>A stack is a data structure used to store a collection of objects. Individual items can be added and  stored in a stack using a push operation. Objects can be retrieved using a pop operation, which removes an item from the stack.</p> <p>When an object is added to a stack, it is placed on the top of all previously entered items. </p> <p>A stack in which items are removed from the top is considered a \"LIFO\" - Last in, First Out. In a \"FIFO\" - First In, First Out items are removed from the bottom.</p>"},{"location":"Programming-Languages/Bash/","title":"Bash","text":""},{"location":"Programming-Languages/Bash/#notes","title":"Notes","text":"<ul> <li>The proper she-bang for Bash is <code>#!/usr/bin/env bash</code>.</li> </ul>"},{"location":"Programming-Languages/Bash/#links","title":"Links","text":"<ul> <li>Your <code>~/.bashrc</code> doesn't have to be a mess</li> </ul>"},{"location":"Programming-Languages/JSON/","title":"JSON","text":""},{"location":"Programming-Languages/JSON/#usage","title":"Usage","text":""},{"location":"Programming-Languages/JSON/#strings","title":"Strings","text":"<pre><code>{\n    \"my_key\": \"my_string\" \n}\n</code></pre>"},{"location":"Programming-Languages/JSON/#integer-and-floats","title":"Integer and floats","text":"<pre><code>{\n    \"my_int\": 2,\n    \"my_float\": 3.5\n}\n</code></pre>"},{"location":"Programming-Languages/JSON/#array","title":"Array","text":"<pre><code>{\n    \"my_list\": [\"test\", 5, \"test3\"]\n}\n</code></pre>"},{"location":"Programming-Languages/JSON/#objects","title":"Objects","text":"<pre><code>{\n    \"my_object\": {\n        \"name\": \"Test Object\",\n        \"childs\": [\n            {\n                \"name\": \"Child object 1\"\n            }\n        ]\n    }\n}\n</code></pre>"},{"location":"Programming-Languages/JSON/#links","title":"Links","text":""},{"location":"Programming-Languages/YAML/","title":"YAML","text":"<p>YAML is commonly used for configuration files and in applications where data is being stored or transmitted.</p> <p>Filenames can end with <code>.yaml</code> or <code>.yml</code>.</p>"},{"location":"Programming-Languages/YAML/#usage","title":"Usage","text":""},{"location":"Programming-Languages/YAML/#strings","title":"Strings","text":"<pre><code>---\nkey: this is a string\n\nkey: \"this is also a string\"\n\nkey: |\n  this is a multi-line\n  string with line breaks\n\nkey: &gt;\n  this a multi-line \n  string withouth line breaks\n</code></pre>"},{"location":"Programming-Languages/YAML/#integers-and-floats","title":"Integers and floats","text":"<pre><code>---\ninteger: 595\n\nfloat: 12.2\n</code></pre>"},{"location":"Programming-Languages/YAML/#lists","title":"Lists","text":"<pre><code>---\nlist1: [1, \"two\", 3]\n\nlist2:\n  - 1\n  - \"two\"\n  - 3\n</code></pre>"},{"location":"Programming-Languages/YAML/#objects","title":"Objects","text":"<pre><code>---\nmy_obj:\n  title: My Object\n  description: This is a object\n  childs:\n    - test_obj:\n        name: Test Object\n</code></pre>"},{"location":"Programming-Languages/YAML/#comments","title":"Comments","text":"<pre><code>---\n# this is a comment\n</code></pre>"},{"location":"Programming-Languages/YAML/#links","title":"Links","text":"<ul> <li>YAML Tutorial: Everything You Need to Get Started in Minutes</li> </ul>"},{"location":"Programming-Languages/Go/Build/","title":"Build go binaries","text":""},{"location":"Programming-Languages/Go/Build/#linux","title":"Linux","text":"<pre><code>GOOS=linux GOARCH=amd64 go build -v\n</code></pre>"},{"location":"Programming-Languages/Go/Build/#windows","title":"Windows","text":"<pre><code>GOOS=windows GOARCH=amd64 go build -v\n</code></pre>"},{"location":"Programming-Languages/Go/Build/#helpful-makefile","title":"Helpful Makefile","text":"<pre><code>PROJECT_NAME := \"test-project\"\nPKG := \"github.com/rwxd/$(PROJECT_NAME)\"\nPKG_LIST := $(shell go list ${PKG}/...)\nGO_FILES := $(shell find . -name '*.go' | grep -v _test.go)\n\nhelp:\n    @grep -E '^[a-zA-Z_-]+:.*?## .*$$' $(MAKEFILE_LIST) | sort | awk 'BEGIN {FS = \":.*?## \"}; {printf \"\\033[36m%-30s\\033[0m %s\\n\", $$1, $$2}'\n\nall: build\n\ntest: ## Test go code\n    @go test -race ./...\n\ndep: ## Get the dependencies\n    @go get -v -d ./...\n\nsetup: ## Install required things\n    python3 -m pip install -r requirements-dev.txt\n    pre-commit install\n\nbuild: dep build-linux build-windows ## Build for all platforms\n\nbuild-linux: dep ## Build for linux\n    @mkdir -p build/\n    @GOOS=linux GOARCH=amd64 go build -o build/ -v $(PKG)\n\nbuild-windows: dep ## Build for windows\n    @mkdir -p build/\n    @GOOS=windows GOARCH=amd64 go build -v -o build/ $(PKG)\n\nclean: ## Remove previous build\n    @rm -rf build/\n</code></pre>"},{"location":"Programming-Languages/Go/Concurrency/","title":"Concurrency in Go","text":""},{"location":"Programming-Languages/Go/Concurrency/#mutex","title":"Mutex","text":"<p>Safely access data across multiple goroutines</p> <pre><code>func editFile(path string, mu *sync.Mutex){\n    mu.Lock()\n    defer mu.Unlock()\n    // I/O stuff\n}\n</code></pre>"},{"location":"Programming-Languages/Go/Formatting/","title":"Formatting in Go","text":"<p>The Go development tools include a command, <code>go fmt</code>, which automatically reformats your code to match the standard format.</p>"},{"location":"Programming-Languages/Python/profiling/","title":"Profiling in Python","text":""},{"location":"Programming-Languages/Python/profiling/#generate-data","title":"Generate data","text":""},{"location":"Programming-Languages/Python/profiling/#pythons-integrated-cprofile","title":"Pythons integrated <code>cProfile</code>","text":"<pre><code>python3 -m cProfile -o profile.pstats -m my_module &lt;args&gt;\n</code></pre>"},{"location":"Programming-Languages/Python/profiling/#yappi","title":"Yappi","text":"<p>Yappi supports asynchronous and multithreaded profiling, which is not supported by the built-in profiler.</p> <pre><code>pip3 install -U yappi\n</code></pre> <pre><code>import yappi\nfrom my_module import my_function\n\nyappi.start()\n\nmy_function()\n\nyappi.stop()\n\nyappi.get_func_stats().save(\"profile.pstats\", type=\"pstats\")\n</code></pre>"},{"location":"Programming-Languages/Python/profiling/#visualisation","title":"Visualisation","text":""},{"location":"Programming-Languages/Python/profiling/#gprof2dot-dot-diagram-svg","title":"gprof2dot (Dot Diagram, SVG)","text":"<p>Transform a <code>.pstats</code> file with gprof2dot into a dot graph as a svg file.</p> <pre><code>pip3 install -U gprof2dot\n</code></pre> <pre><code>gprof2dot -f pstats profile.pstats | dot -Tsvg -o profile.svg\n</code></pre>"},{"location":"Programming-Languages/Python/profiling/#snakeviz-interactive","title":"Snakeviz (Interactive)","text":"<p>Snakeviz is a web-based profiling tool which allows users to analyse their code by filtering data by module, function and file, and sorting it according to different criteria such as the number of calls or cumulative time spent in a function.</p> <pre><code>pip3 install -U snakeviz\n</code></pre> <pre><code>snakeviz profile.pstats\n</code></pre>"},{"location":"Programming-Languages/Python/profiling/#flamegraph-svg","title":"flamegraph (SVG)","text":"<p>Flame graphs are visual tools that show how much time is spent in each function call. The width of each bar in the graph represents the amount of time spent in that function, with wider bars indicating more time spent and narrower bars indicating less time. The main function is at the bottom, and the subfunctions are stacked vertically on top.</p> <pre><code>pip3 install -U flameprof\n</code></pre> <pre><code>flameprof profile.pstats &gt; profile.svg\n</code></pre>"},{"location":"Programming-Languages/Python/typing-in-python/","title":"Typing in Python","text":"<p>In Python typing can be optionally used. To check typing the standard tool is MyPy.</p>"},{"location":"Programming-Languages/Python/typing-in-python/#usage","title":"Usage","text":""},{"location":"Programming-Languages/Python/typing-in-python/#function-annotations","title":"Function annotations","text":"<pre><code>def func(arg: arg_type, optarg: arg_type = default) -&gt; return_type: \n...\n</code></pre> <p>For arguments the syntax is <code>argument: annotation</code>, while the return type is annotated using <code>-&gt; annotation</code>. Note that the annotation must be a valid Python expression.</p>"},{"location":"Programming-Languages/Python/typing-in-python/#variable-annotations","title":"Variable annotations","text":"<p>Sometimes the type checker needs help in figuring out the types of variables as well. The syntax is similar:</p> <pre><code>pi: float = 3.142\n\ndef circumference(radius: float) -&gt; float:\n    return 2 * pi * radius`\n</code></pre>"},{"location":"Programming-Languages/Python/typing-in-python/#links","title":"Links","text":"<ul> <li>Real python article on type checking</li> </ul>"},{"location":"Programming-Languages/Python/venvs/","title":"Python Virtual Environments","text":""},{"location":"Programming-Languages/Python/venvs/#work-with-virtual-environments","title":"Work with virtual environments","text":"<p>Create a virtual environment <code>python3 -m virtualenv .venv</code> or <code>python3 -m venv .venv</code></p>"},{"location":"Programming-Languages/Python/venvs/#links","title":"Links","text":""},{"location":"Programming-Languages/Python/Python-Libraries/FastAPI/","title":"FastAPI","text":""},{"location":"Programming-Languages/Python/Python-Libraries/Pathlib/","title":"Pathlib","text":""},{"location":"Programming-Languages/Python/Python-Libraries/Pathlib/#usage","title":"Usage","text":"<p>Get current path</p> <pre><code>from pathlib import Path\nSTATIC_FILES_DIR = Path(__file__).parent.absolute()\n</code></pre>"},{"location":"Programming-Languages/Python/Python-Libraries/Pathlib/#links","title":"Links","text":""},{"location":"Programming-Languages/Python/Python-Libraries/PyTest/","title":"PyTest","text":""},{"location":"Programming-Languages/Python/Python-Libraries/PyTest/#mocks","title":"Mocks","text":"<p>For mocking with PyTest the <code>unittest.mock</code> library is used.</p>"},{"location":"Programming-Languages/Python/Python-Libraries/PyTest/#fixtures","title":"Fixtures","text":""},{"location":"Programming-Languages/Python/Python-Libraries/PyTest/#add-parameters-to-fixtures","title":"Add parameters to fixtures","text":"<pre><code>import json\nimport pytest\n\n@pytest.fixture\ndef json_loader():\n    \"\"\"Loads data from JSON file\"\"\"\n\n    def _loader(filename):\n        with open(filename, 'r') as f:\n            print(filename)\n            data = json.load(f)\n        return data\n\n    return _loader\n\n\ndef test_wrong_stop(client, mocker, json_loader):\n    # Arrange\n    get_mock = mocker.MagicMock()\n    get_mock.status_code = 200\n    get_mock.json.return_value = json_loader(\n        cta_error_incorrect_stop_response.json)\n    mocker.patch.object(\n        backend.cta.requests,\n        'get',\n        return_value=get_mock,\n    )\n\n    # Act\n    response = client.simulate_get('/stops/106')\n\n    # Assert\n    assert response.status == falcon.HTTP_200\n    assert response.json == {'error': 'stop_id: 106 does not exist\n</code></pre>"},{"location":"Programming-Languages/Python/Python-Libraries/PyTest/#links","title":"Links","text":"<ul> <li>Python Mocks 5 Part Series</li> </ul>"},{"location":"Programming-Languages/Rust/Memory%20Management/","title":"Heat","text":""},{"location":"Programming-Languages/Rust/Memory%20Management/#stack","title":"Stack","text":""},{"location":"Tools/Anki/","title":"Anki","text":""},{"location":"Tools/Anki/#plugins","title":"Plugins","text":"<ul> <li>Image Occlusion Enhanced</li> <li>Mini Format Pack</li> <li>Review Heatmap</li> <li>Syntax Highlighting for Code</li> </ul>"},{"location":"Tools/Anki/#decks","title":"Decks","text":""},{"location":"Tools/Anki/#links","title":"Links","text":"<ul> <li>How can we develop transformative tools for thought?</li> </ul>"},{"location":"Tools/Audible-Cli/","title":"Audible CLI","text":"<p>https://github.com/mkb79/audible-cli</p>"},{"location":"Tools/Audible-Cli/#setup","title":"Setup","text":""},{"location":"Tools/Audible-Cli/#authfile","title":"Authfile","text":"<pre><code>audible manage auth-file add --password \"&lt;password&gt;\"\n</code></pre>"},{"location":"Tools/Audible-Cli/#profile","title":"Profile","text":"<pre><code>audible manage profile add\n</code></pre>"},{"location":"Tools/Audible-Cli/#download-all-audio-books-to-the-current-directory","title":"Download all audio books to the current directory","text":"<pre><code>audible -P default -v info download --all --aax --ignore-podcasts --jobs 3 --ignore-errors\n</code></pre>"},{"location":"Tools/Audible-Cli/#convert-aax-to-mp3","title":"Convert aax to mp3","text":"<p>https://github.com/KrumpetPirate/AAXtoMP3</p>"},{"location":"Tools/Audible-Cli/#get-the-auth-token-from-audible-cli","title":"Get the auth token from audible-cli","text":"<pre><code>audible -P default activation-bytes\n</code></pre>"},{"location":"Tools/Audible-Cli/#convert-aax-to-mp3_1","title":"Convert aax to mp3","text":"<pre><code>aaxtomp3 -e:mp3 --level 5 -s --authcode &lt;authcode&gt; --loglevel 1 &lt;file.aax&gt;\n</code></pre>"},{"location":"Tools/Audible-Cli/#convert-all-aax-to-mp3","title":"Convert all aax to mp3","text":"<pre><code>find . -name \"*.aax\" -exec aaxtomp3 -e:mp3 --level 5 -s --authcode &lt;authcode&gt; --loglevel 1 --complete_dir &lt;path&gt; {} \\;\n</code></pre>"},{"location":"Tools/Bitwarden/","title":"Bitwarden","text":"<p>Bitwarden is a open source password manager with cloud synchronization and the option to host the sync server on your own hardware.</p>"},{"location":"Tools/Bitwarden/#links","title":"Links","text":"<ul> <li>Self hosting Bitwarden Password Manager</li> </ul>"},{"location":"Tools/Cookiecutter/","title":"Cookiecutter Templates for Projects","text":"<p>Use Jinja2 templating in boilerplates for new projects.</p>"},{"location":"Tools/Cookiecutter/#usage","title":"Usage","text":"<pre><code>python3 -m pip install cookiecutter\ncookiecutter gh:rwxd/cookiecutter-gh-project\n</code></pre>"},{"location":"Tools/HashiCorp-Vault/","title":"HashiCorp Vault","text":"<p>HashiCorp Vault can be used to store things like passwords, certificates and encryption keys.</p>"},{"location":"Tools/HashiCorp-Vault/#usage","title":"Usage","text":""},{"location":"Tools/HashiCorp-Vault/#cli","title":"CLI","text":"<p>Login to a vault server with a token <code>vault login -address=https://vault.net -method=token</code></p> <p>List kv entries <code>vault kv list network/services</code></p> <p>Get a kv entry <code>vault get network/services/ipam</code></p>"},{"location":"Tools/HashiCorp-Vault/#links","title":"Links","text":"<ul> <li>Awesome Vault Tools</li> </ul>"},{"location":"Tools/KeepassXC/","title":"KeePassXC","text":"<p>KeePassXC is a open source password manager which uses a local password database file.</p> <p>To sync the database with different devices an external cloud service like Dropbox or OneDrive is needed.</p> <p>KeePassXC has the functionality to store SSH keys and inject the keys into the SSH agent.</p>"},{"location":"Tools/KeepassXC/#links","title":"Links","text":"<ul> <li>Getting started</li> <li>Using KeePassXC to manage SSH keys</li> <li>Authentication</li> </ul>"},{"location":"Tools/MkDocs/","title":"MkDocs","text":"<p>MkDocs is a fast, simple and downright gorgeous static site generator that's geared towards building project documentation. Documentation source files are written in Markdown, and configured with a single YAML configuration file. --  https://www.mkdocs.org/ </p>"},{"location":"Tools/MkDocs/#usage","title":"Usage","text":"<p>View the website local with: <code>mkdocs serve</code>.</p> <p>Build the website with: <code>mkdocs build</code>.</p> <p>The default export directory is <code>./site</code>.</p>"},{"location":"Tools/MkDocs/#plugins","title":"Plugins","text":""},{"location":"Tools/MkDocs/#links","title":"Links","text":"<ul> <li>mkdocs-material</li> </ul>"},{"location":"Tools/Task/","title":"Task","text":"<p>Task is a runner / built tool. </p> <p>The configuration is written in a <code>Taskfile.yml</code></p> <p>Taskfile Template <pre><code># https://taskfile.dev  \n\nversion: '3'  \n\nvars:  \nGREETING: Hello, World!  \n\ntasks:  \ndefault:  \ncmds:  \n- echo \"{{.GREETING}}\"  \nsilent: true\n</code></pre></p>"},{"location":"Tools/Task/#usage","title":"Usage","text":"<p>Init a Taskfile template  <code>task --init</code></p> <p>List tasks <code>task -l</code> or <code>task --list</code></p> <p>Use vars at global or task level <pre><code>vars:\n  CONTAINER_NAME: wiki.rwxd.eu\n  CURRENT_DIR:\n    sh: pwd\n  SITE_DIR: \"{{.CURRENT_DIR}}/site\"\n</code></pre></p>"},{"location":"Tools/Task/#links","title":"Links","text":""},{"location":"Tools/borg/","title":"Borg","text":""},{"location":"Tools/borg/#delete-directory-from-all-backups","title":"Delete directory from all backups","text":"<p>Dry-Run</p> <pre><code>borg recreate &lt;archive&gt; --dry-run --list --verbose --exclude &lt;path&gt;\n</code></pre> <p>Delete</p> <pre><code>borg recreate &lt;archive&gt; --list --verbose --exclude &lt;path&gt;\n</code></pre>"},{"location":"Tools/cht.sh/","title":"cht.sh","text":""},{"location":"Tools/cht.sh/#links","title":"Links","text":"<ul> <li>Installation</li> <li>Tab completion</li> </ul>"},{"location":"Tools/mermaid/","title":"Mermaid","text":"<pre><code>sequenceDiagram\nAlice-&gt;&gt;John: Hello John, how are you?\nloop Healthcheck\n    John-&gt;&gt;John: Fight against hypochondria\nend\nNote right of John: Rational thoughts!\nJohn--&gt;&gt;Alice: Great!\nJohn-&gt;&gt;Bob: How about you?\nBob--&gt;&gt;John: Jolly good!\n</code></pre>"},{"location":"Tools/openssl/","title":"Open SSL","text":""},{"location":"Tools/openssl/#generate-passwords","title":"Generate passwords","text":"<p><code>openssl passwd -6 -salt xyz</code></p>"},{"location":"Tools/spicetify/","title":"Change Spotify Theme with spicetify-cli","text":""},{"location":"Tools/spicetify/#install","title":"Install","text":"<p>Arch <code>yay -S spicetify-cli</code></p>"},{"location":"Tools/spicetify/#usage","title":"usage","text":"<p>generate config <code>spicetify</code></p> <p>apply config <pre><code>spicetify backup apply\nspicetify apply\n</code></pre></p> <p>change theme <code>spicetify config current_theme THEME_NAME</code></p> <p>change color scheme <code>spicetify config color_scheme SCHEME_NAME</code></p>"},{"location":"Tools/spicetify/#help","title":"help","text":"<p>when Spotify is installed through AUR <pre><code>sudo chmod a+wr /opt/spotify\nsudo chmod a+wr /opt/spotify/Apps -R\n</code></pre></p>"},{"location":"Tools/spicetify/#links","title":"Links","text":"<ul> <li>spicetify-cli</li> <li>spicetify themes</li> </ul>"},{"location":"Tools/Git/bfg-repo-cleaner/","title":"Clean Git repositories with BFG","text":"<p>With BFG large or troublesome files can be removed from a Git Repository</p> <p>The Git repo should be cloned with <code>--mirror</code></p>"},{"location":"Tools/Git/bfg-repo-cleaner/#files","title":"Files","text":"<p>Delete a file in a Git repository and force push the new commit history.</p> <pre><code>bfg --delete-files file.md\ngit reflog expire --expire=now --all &amp;&amp; git gc --prune=now --aggressive\ngit push --force\n</code></pre>"},{"location":"Tools/Git/bfg-repo-cleaner/#secrest","title":"Secrest","text":"<p>A file with a list of secrets can be used to remove all occurrences in the git repository</p> <p><code>leaked-passwords.txt</code></p> <pre><code>PASSWORD1                       # Replace literal string 'PASSWORD1' with '***REMOVED***' (default)\nPASSWORD2==&gt;examplePass         # replace with 'examplePass' instead\nPASSWORD3==&gt;                    # replace with the empty string\nregex:password=\\w+==&gt;password=  # Replace, using a regex\nregex:\\r(\\n)==&gt;$1               # Replace Windows newlines with Unix newlines\n</code></pre> <pre><code>bfg --replace-text leaked-passwords.txt\n</code></pre> <pre><code>git reflog expire --expire=now --all &amp;&amp; git gc --prune=now --aggressive\n</code></pre>"},{"location":"Tools/Git/git-crypt/","title":"Git Crypt","text":""},{"location":"Tools/Git/git-crypt/#how-to","title":"How to","text":""},{"location":"Tools/Git/git-crypt/#init","title":"Init","text":"<p>Initialize repository with <code>git-crypt init</code></p>"},{"location":"Tools/Git/git-crypt/#files-to-encrypt","title":"Files to encrypt","text":"<p>Create a <code>.gitattributes</code> file</p> <pre><code>touch .gitattributes\n</code></pre> <p>The <code>.gitattatributes</code> file contains lines in the following form:</p> <pre><code>[file pattern] attr1=value1 attr2=value2\n</code></pre>"},{"location":"Tools/Git/git-crypt/#example","title":"Example","text":"<p>If we want to encrypt the file <code>config.yml</code>, the <code>.gitattatributes</code> should contain the following:</p> <pre><code>config.yml filter=git-crypt diff=git-crypt\n</code></pre> <p>With <code>git-crypt status</code> we can see that our file will be encrypted on push to our remote repository.</p> <pre><code>\u276f git-crypt status | grep \"config.yml\"\n    encrypted: config.yml\n</code></pre>"},{"location":"Tools/Git/git-crypt/#locking","title":"Locking","text":"<p>With <code>git-crypt lock</code> and <code>git-crypt unlock</code> the repository can be unlocked at will.</p>"},{"location":"Tools/Git/git-crypt/#adding-additional-users-with-gpg-keys","title":"Adding additional users with gpg keys","text":"<p><code>git-crypt add-gpg-user KEYID</code></p>"},{"location":"Tools/Git/git/","title":"Git","text":""},{"location":"Tools/Git/git/#links","title":"Links","text":"<ul> <li>Write yourself a Git</li> <li>DIY Git in Python</li> <li>Git in Go</li> </ul>"},{"location":"Tools/Git/gitleak/","title":"Gitleak","text":""},{"location":"Tools/Git/gitleak/#scan-current-git-repository","title":"Scan current git repository","text":"<pre><code>docker run -v \"$PWD\":/path ghcr.io/zricethezav/gitleaks:v8.8.12 detect -f json -r \"/path/report-secrets.json\" --source=\"/path\"\n</code></pre> <p>Extract unique secrets to <code>extracted-secrets</code></p> <pre><code>cat report-secrets.json | jq -n -r 'inputs[].Secret' | sort -u &gt; extracted-secrets\n</code></pre>"},{"location":"Tools/Git/gitleak/#clear-secrets-from-repository","title":"Clear secrets from repository","text":"<p>Use (bfg)[../bfg-repo-cleaner.md]</p> <p>Prepare with:</p> <pre><code>bfg --replace-text extracted-secrets\n</code></pre> <p>Clean secrets with:</p> <pre><code>git reflog expire --expire=now --all &amp;&amp; git gc --prune=now --aggressive\n</code></pre>"},{"location":"Tools/Git/GitLab/access-tokens/","title":"GitLab Access Tokens","text":""},{"location":"Tools/Git/GitLab/access-tokens/#clone","title":"Clone","text":"<p>Clone with an access token <code>git clone https://$project_name:$token@$gitlab/$project_path.git</code></p>"},{"location":"Tools/NeoVIM/Coc/","title":"Coc in Neovim","text":""},{"location":"Tools/NeoVIM/Coc/#coc-plugins","title":"Coc Plugins","text":"<p>Use in init.vim <pre><code>let g:coc_global_extensions = [\n            \\ 'coc-pyright',\n            \\ 'coc-prettier',\n            \\ 'coc-git',\n            \\ 'coc-json',\n            \\ 'coc-docker',\n            \\ 'coc-yaml',\n            \\ 'coc-html',\n            \\ 'coc-sh',\n            \\ 'coc-go',\n            \\ '@yaegassy/coc-ansible',\n            \\ ]\n</code></pre></p>"},{"location":"Tools/PlantUML/PlantUML%20Themes/","title":"PlantUML Themes","text":"<p>An overview of all available themes can be seen in the Theme Gallery.</p>"},{"location":"Tools/PlantUML/PlantUML%20Themes/#usage","title":"Usage","text":"<p>Set a theme </p>  <p>Get all themes with <code>help themes</code></p>"},{"location":"Tools/PlantUML/PlantUML%20Themes/#links","title":"Links","text":"<ul> <li>plantuml.com/en/theme</li> </ul>"},{"location":"Tools/VS-Code/Plugins/","title":"VS Code Plugins","text":""},{"location":"Tools/VS-Code/Plugins/#list","title":"List","text":"<ul> <li>PlantUML</li> </ul>"},{"location":"Tools/VS-Code/Plugins/#links","title":"Links","text":"<ul> <li>Best VS Code Extensions 2021</li> <li>Awesome VS Code</li> </ul>"},{"location":"Tools/Vim/Comment%20out%20code/","title":"Comment out code with VIM","text":"<ol> <li>select the first character of your block</li> <li>press crtl + v (rectangular visual selectionn mode)</li> <li>type j for each line you want to be commented</li> <li>type shift + i (\"insert at start\")</li> <li>type #</li> <li>end with ESC </li> </ol>"},{"location":"Tools/Vim/copy%20all/","title":"Copy all","text":"<p><code>g g \" + y G</code></p> <p><code>%y+</code></p>"}]}