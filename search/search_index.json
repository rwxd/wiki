{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Introduction \u2691 The wiki is built with MkDocs and GitHub Pages. It supports inline PlantUML diagrams. Inspired by wiki.nikitavoloboev.xyz & The Blue Book . Workflow \u2691 For editing the wiki I currently use Obsidian . I'm also experimenting with Dendron and Foam as a alternative. After commit & push the new page will be build trough GitHub Actions. Currently I'm using GitHub Pages to serve the website files, but I'm also experimenting with Cloudflare Pages. Using the wiki \u2691 You can quickly search the contents of this wiki above or you can explore the tree view to the left.","title":"Introduction"},{"location":"#introduction","text":"The wiki is built with MkDocs and GitHub Pages. It supports inline PlantUML diagrams. Inspired by wiki.nikitavoloboev.xyz & The Blue Book .","title":"Introduction"},{"location":"#workflow","text":"For editing the wiki I currently use Obsidian . I'm also experimenting with Dendron and Foam as a alternative. After commit & push the new page will be build trough GitHub Actions. Currently I'm using GitHub Pages to serve the website files, but I'm also experimenting with Cloudflare Pages.","title":"Workflow"},{"location":"#using-the-wiki","text":"You can quickly search the contents of this wiki above or you can explore the tree view to the left.","title":"Using the wiki"},{"location":"Research-Papers/","text":"Research Papers \u2691 Links \u2691 What to Do if Sci-Hub Can't Find Your Paper: A Short Guide (2021) Some Papers","title":"Research Papers"},{"location":"Research-Papers/#research-papers","text":"","title":"Research Papers"},{"location":"Research-Papers/#links","text":"What to Do if Sci-Hub Can't Find Your Paper: A Short Guide (2021) Some Papers","title":"Links"},{"location":"Blog/Misc/blog-gh-pages-mkdocs/","text":"How to create a blog with GitHub Pages and MkDocs \u2691 Dockerfile \u2691 Create the Containerfile at Dockerfile or Containerfile . FROM docker.io/ubuntu:focal RUN : \\ && apt-get update -y \\ && apt-get install -y --no-install-recommends \\ python3 \\ python3-venv \\ python3-pip \\ && rm -rf /var/lib/api/lists* WORKDIR /src COPY requirements.txt . ENV PATH = /venv/bin: $PATH RUN : \\ && python3 -m venv /venv \\ && python3 -m pip --no-cache-dir install -r requirements.txt COPY . . WORKDIR /src/blog Taskfile \u2691 To store some reoccuring tasks we use a Taskfile. To install Task use this link or just use sudo sh -c \"$(curl --location https://taskfile.dev/install.sh)\" -- -d -b /usr/local/bin Create the Taskfile.yml . # https://taskfile.dev version : \"3\" vars : CONTAINER_NAME : blog.rwxd.eu CURRENT_DIR : sh : pwd SITE_DIR : \"{{.CURRENT_DIR}}/docs/site\" tasks : default : cmds : - task -l silent : true setup : desc : Setup requirements cmds : - python3 -m pip install -r requirements.txt -q - pre-commit install silent : true image : desc : builds container image with name blog.rwxd.eu cmds : - podman build -t {{.CONTAINER_NAME}} -f ./Containerfile silent : true serve : desc : Serve blog with a container vars : PORT : 8000 MOUNT : \"{{.CURRENT_DIR}}/src\" cmds : - task : image - podman run --rm -p {{.PORT}}:8000 -v ./:/src {{.CONTAINER_NAME}} mkdocs serve silent : true serve-local : desc : Serve blog local dir : ./blog cmds : - mkdocs serve silent : true build : desc : Build blog pages cmds : - task : image - mkdir -p {{.SITE_DIR}} - podman run --rm -v {{.SITE_DIR}}:/src/blog/site {{.CONTAINER_NAME}} sh -c \"mkdocs build\"","title":"How to create a blog with GitHub Pages and MkDocs"},{"location":"Blog/Misc/blog-gh-pages-mkdocs/#how-to-create-a-blog-with-github-pages-and-mkdocs","text":"","title":"How to create a blog with GitHub Pages and MkDocs"},{"location":"Blog/Misc/blog-gh-pages-mkdocs/#dockerfile","text":"Create the Containerfile at Dockerfile or Containerfile . FROM docker.io/ubuntu:focal RUN : \\ && apt-get update -y \\ && apt-get install -y --no-install-recommends \\ python3 \\ python3-venv \\ python3-pip \\ && rm -rf /var/lib/api/lists* WORKDIR /src COPY requirements.txt . ENV PATH = /venv/bin: $PATH RUN : \\ && python3 -m venv /venv \\ && python3 -m pip --no-cache-dir install -r requirements.txt COPY . . WORKDIR /src/blog","title":"Dockerfile"},{"location":"Blog/Misc/blog-gh-pages-mkdocs/#taskfile","text":"To store some reoccuring tasks we use a Taskfile. To install Task use this link or just use sudo sh -c \"$(curl --location https://taskfile.dev/install.sh)\" -- -d -b /usr/local/bin Create the Taskfile.yml . # https://taskfile.dev version : \"3\" vars : CONTAINER_NAME : blog.rwxd.eu CURRENT_DIR : sh : pwd SITE_DIR : \"{{.CURRENT_DIR}}/docs/site\" tasks : default : cmds : - task -l silent : true setup : desc : Setup requirements cmds : - python3 -m pip install -r requirements.txt -q - pre-commit install silent : true image : desc : builds container image with name blog.rwxd.eu cmds : - podman build -t {{.CONTAINER_NAME}} -f ./Containerfile silent : true serve : desc : Serve blog with a container vars : PORT : 8000 MOUNT : \"{{.CURRENT_DIR}}/src\" cmds : - task : image - podman run --rm -p {{.PORT}}:8000 -v ./:/src {{.CONTAINER_NAME}} mkdocs serve silent : true serve-local : desc : Serve blog local dir : ./blog cmds : - mkdocs serve silent : true build : desc : Build blog pages cmds : - task : image - mkdir -p {{.SITE_DIR}} - podman run --rm -v {{.SITE_DIR}}:/src/blog/site {{.CONTAINER_NAME}} sh -c \"mkdocs build\"","title":"Taskfile"},{"location":"Blog/Misc/pluralsight_trial/","text":"Pluralsight demo / trial \u2691 Create a new Pluralsight Account with a one month demo trough Visual Studio Dev Essentials. Create a new Microsoft account with a Microsoft live email Activate PluralSight benefits Confirm the registration email","title":"Pluralsight demo / trial"},{"location":"Blog/Misc/pluralsight_trial/#pluralsight-demo-trial","text":"Create a new Pluralsight Account with a one month demo trough Visual Studio Dev Essentials. Create a new Microsoft account with a Microsoft live email Activate PluralSight benefits Confirm the registration email","title":"Pluralsight demo / trial"},{"location":"CTFs/overthewire/bandit/","text":"Bandit \u2691 Bandit Level 0 \u2691 just login ssh bandit0 @bandit . labs . overthewire . org - p 2220 and password bandit0 Level 0 -> 1 \u2691 Password for level 2 is in the ~/readme file. bandit0@bandit:~$ cat readme boJ9jbbUNNfktd78OOpsqOltutMc3MY1 Level 1 -> 2 \u2691 bandit1@bandit:~$ cat \"./-\" CV1DtqXWVFXTvM2F0k09SHz0YwRINYA9 Level 2 -> 3 \u2691 bandit2@bandit:~$ cat ./spaces \\ in \\ this \\ filename UmHadQclWmgdLOKQ3YNgjWxGoRMb5luK Level 3 -> 4 \u2691 bandit3@bandit:~$ cat inhere/.hidden pIwrPrtPN36QITSp3EQaw936yaFoFgAB Level 5 -> 6 \u2691 bandit4@bandit:~$ find inhere/ -type f | xargs file | grep tex inhere/-file07: ASCII text bandit4@bandit:~$ cat inhere/-file07 koReBOKuIDDepwhWk7jZC0RTdopnAYKh Level 6 -> 7 \u2691 bandit5@bandit:~$ find inhere/ -type f -size 1033c ! -executable | xargs file | grep tex inhere/maybehere07/.file2: ASCII text, with very long lines bandit5@bandit:~$ cat inhere/maybehere07/.file2 DXjZPULLxYr17uwoI01bNLQbtFemEgo7 Level 7 -> 8 \u2691","title":"Bandit"},{"location":"CTFs/overthewire/bandit/#bandit","text":"Bandit","title":"Bandit"},{"location":"CTFs/overthewire/bandit/#level-0","text":"just login ssh bandit0 @bandit . labs . overthewire . org - p 2220 and password bandit0","title":"Level 0"},{"location":"CTFs/overthewire/bandit/#level-0-1","text":"Password for level 2 is in the ~/readme file. bandit0@bandit:~$ cat readme boJ9jbbUNNfktd78OOpsqOltutMc3MY1","title":"Level 0 -&gt; 1"},{"location":"CTFs/overthewire/bandit/#level-1-2","text":"bandit1@bandit:~$ cat \"./-\" CV1DtqXWVFXTvM2F0k09SHz0YwRINYA9","title":"Level 1 -&gt; 2"},{"location":"CTFs/overthewire/bandit/#level-2-3","text":"bandit2@bandit:~$ cat ./spaces \\ in \\ this \\ filename UmHadQclWmgdLOKQ3YNgjWxGoRMb5luK","title":"Level 2 -&gt; 3"},{"location":"CTFs/overthewire/bandit/#level-3-4","text":"bandit3@bandit:~$ cat inhere/.hidden pIwrPrtPN36QITSp3EQaw936yaFoFgAB","title":"Level 3 -&gt; 4"},{"location":"CTFs/overthewire/bandit/#level-5-6","text":"bandit4@bandit:~$ find inhere/ -type f | xargs file | grep tex inhere/-file07: ASCII text bandit4@bandit:~$ cat inhere/-file07 koReBOKuIDDepwhWk7jZC0RTdopnAYKh","title":"Level 5 -&gt; 6"},{"location":"CTFs/overthewire/bandit/#level-6-7","text":"bandit5@bandit:~$ find inhere/ -type f -size 1033c ! -executable | xargs file | grep tex inhere/maybehere07/.file2: ASCII text, with very long lines bandit5@bandit:~$ cat inhere/maybehere07/.file2 DXjZPULLxYr17uwoI01bNLQbtFemEgo7","title":"Level 6 -&gt; 7"},{"location":"CTFs/overthewire/bandit/#level-7-8","text":"","title":"Level 7 -&gt; 8"},{"location":"DevOps/Continuous-Integration/Ansible/ansible-runner/","text":"ansible-runner \u2691 Usage \u2691 Run with docker as process isolation ansible-runner run demo -m debug --hosts localhost -a msg=hello --container-image quay.io/ansible/awx-ee -vvvv --process-isolation --process-isolation-executable=docker Links \u2691 Using Runner with Execution Environments","title":"ansible-runner"},{"location":"DevOps/Continuous-Integration/Ansible/ansible-runner/#ansible-runner","text":"","title":"ansible-runner"},{"location":"DevOps/Continuous-Integration/Ansible/ansible-runner/#usage","text":"Run with docker as process isolation ansible-runner run demo -m debug --hosts localhost -a msg=hello --container-image quay.io/ansible/awx-ee -vvvv --process-isolation --process-isolation-executable=docker","title":"Usage"},{"location":"DevOps/Continuous-Integration/Ansible/ansible-runner/#links","text":"Using Runner with Execution Environments","title":"Links"},{"location":"DevOps/Continuous-Integration/Ansible/molecule/","text":"Ansible Molecule \u2691 The molecule project helps to develop and test Ansible roles. python3 -m pip install molecule Usage \u2691 Generate a new role molecule init role <name> Init in existing role molecule init scenario List drivers molecule drivers","title":"Ansible Molecule"},{"location":"DevOps/Continuous-Integration/Ansible/molecule/#ansible-molecule","text":"The molecule project helps to develop and test Ansible roles. python3 -m pip install molecule","title":"Ansible Molecule"},{"location":"DevOps/Continuous-Integration/Ansible/molecule/#usage","text":"Generate a new role molecule init role <name> Init in existing role molecule init scenario List drivers molecule drivers","title":"Usage"},{"location":"DevOps/Continuous-Integration/Ansible/Ansible%20Code%20Snippets/Wait%20for%20X/","text":"Wait for a connection after e. g. a reboot \u2691 - name : Wait for port 22 wait_for : host : \"{{ ansible_host }}\" port : 22 state : started delay : 10 sleep : 1 connect_timeout : 5 timeout : 900 delegate_to : 127.0.0.1","title":"Wait for a connection after e. g. a reboot"},{"location":"DevOps/Continuous-Integration/Ansible/Ansible%20Code%20Snippets/Wait%20for%20X/#wait-for-a-connection-after-e-g-a-reboot","text":"- name : Wait for port 22 wait_for : host : \"{{ ansible_host }}\" port : 22 state : started delay : 10 sleep : 1 connect_timeout : 5 timeout : 900 delegate_to : 127.0.0.1","title":"Wait for a connection after e. g. a reboot"},{"location":"DevOps/Continuous-Integration/Formatters/Black/","text":"","title":"Black"},{"location":"DevOps/Continuous-Integration/GitLab-CICD/clear_artifacts/","text":"Script to clear GitLab CI/CD Artifacts \u2691 import requests import json class BearerAuth ( requests . auth . AuthBase ): def __init__ ( self , token ): self . token = token def __call__ ( self , r ): r . headers [ \"authorization\" ] = \"Bearer \" + self . token return r project = '804' token = 'ijuiosjdiof' for page in range ( 1 , 200 ): url = f 'https://gitlab.com/api/v4/projects/ { project } /jobs?per_page=100&page= { page } ' print ( f 'Getting jobs from { url } ' ) response = requests . get ( url , auth = BearerAuth ( token )) data = json . loads ( response . text ) for item in data : url = f 'https://gitlab.com/api/v4/projects/ { project } /jobs/ { item [ \"id\" ] } /artifacts' print ( f 'Running on { url } ' ) response = requests . delete ( url , auth = BearerAuth ( token ))","title":"Script to clear GitLab CI/CD Artifacts"},{"location":"DevOps/Continuous-Integration/GitLab-CICD/clear_artifacts/#script-to-clear-gitlab-cicd-artifacts","text":"import requests import json class BearerAuth ( requests . auth . AuthBase ): def __init__ ( self , token ): self . token = token def __call__ ( self , r ): r . headers [ \"authorization\" ] = \"Bearer \" + self . token return r project = '804' token = 'ijuiosjdiof' for page in range ( 1 , 200 ): url = f 'https://gitlab.com/api/v4/projects/ { project } /jobs?per_page=100&page= { page } ' print ( f 'Getting jobs from { url } ' ) response = requests . get ( url , auth = BearerAuth ( token )) data = json . loads ( response . text ) for item in data : url = f 'https://gitlab.com/api/v4/projects/ { project } /jobs/ { item [ \"id\" ] } /artifacts' print ( f 'Running on { url } ' ) response = requests . delete ( url , auth = BearerAuth ( token ))","title":"Script to clear GitLab CI/CD Artifacts"},{"location":"DevOps/Continuous-Integration/Type-Checkers/MyPy/","text":"","title":"MyPy"},{"location":"DevOps/Infrastructure-Solutions/Container/Docker/docker%20commands/","text":"","title":"Docker commands"},{"location":"DevOps/Infrastructure-Solutions/Container/Docker/docker-ipv6/","text":"Docker with IPv6 \u2691 Setup \u2691 Test with a busybox container docker run --rm -it busybox sh","title":"Docker with IPv6"},{"location":"DevOps/Infrastructure-Solutions/Container/Docker/docker-ipv6/#docker-with-ipv6","text":"","title":"Docker with IPv6"},{"location":"DevOps/Infrastructure-Solutions/Container/Docker/docker-ipv6/#setup","text":"Test with a busybox container docker run --rm -it busybox sh","title":"Setup"},{"location":"DevOps/Infrastructure-Solutions/Container/Kubernetes/K3S/Install%20K3S%20on%20Raspberry%20PIs/","text":"Manager \u2691 curl -sfL https://get.k3s.io | sh -s - --write-kubeconfig-mode 644 Get a token for the worker nodes sudo cat /var/lib/rancher/k3s/server/token Worker Node \u2691 Set the K3S Token export K3S_TOKEN = blablabla curl -sfL https://get.k3s.io | K3S_URL=https://manager01.fritz.box:6443 K3S_TOKEN=$K3S_TOKEN sh -","title":"Manager"},{"location":"DevOps/Infrastructure-Solutions/Container/Kubernetes/K3S/Install%20K3S%20on%20Raspberry%20PIs/#manager","text":"curl -sfL https://get.k3s.io | sh -s - --write-kubeconfig-mode 644 Get a token for the worker nodes sudo cat /var/lib/rancher/k3s/server/token","title":"Manager"},{"location":"DevOps/Infrastructure-Solutions/Container/Kubernetes/K3S/Install%20K3S%20on%20Raspberry%20PIs/#worker-node","text":"Set the K3S Token export K3S_TOKEN = blablabla curl -sfL https://get.k3s.io | K3S_URL=https://manager01.fritz.box:6443 K3S_TOKEN=$K3S_TOKEN sh -","title":"Worker Node"},{"location":"DevOps/Infrastructure-Solutions/Container/Kubernetes/K3S/raspberry/","text":"","title":"Raspberry"},{"location":"DevOps/Infrastructure-Solutions/Container/Kubernetes/Networking/kube-vip/","text":"Kube-VIP \u2691 The hybrid mode works for the control plane and kubernetes service https://kube-vip.io/hybrid/","title":"Kube-VIP"},{"location":"DevOps/Infrastructure-Solutions/Container/Kubernetes/Networking/kube-vip/#kube-vip","text":"The hybrid mode works for the control plane and kubernetes service https://kube-vip.io/hybrid/","title":"Kube-VIP"},{"location":"DevOps/Infrastructure-Solutions/Container/Kubernetes/Networking/metallb/","text":"MetalLB \u2691 Install \u2691 https://metallb.universe.tf/installation/ kubectl apply -f https://raw.githubusercontent.com/metallb/metallb/v0.10.2/manifests/namespace.yaml kubectl apply -f https://raw.githubusercontent.com/metallb/metallb/v0.10.2/manifests/metallb.yaml config \u2691 apiVersion : v1 kind : ConfigMap metadata : namespace : metallb - system name : config data : config : | address - pools : - name : default protocol : layer2 addresses : - 192.168 . 3.200 - 192.168 . 3.250","title":"MetalLB"},{"location":"DevOps/Infrastructure-Solutions/Container/Kubernetes/Networking/metallb/#metallb","text":"","title":"MetalLB"},{"location":"DevOps/Infrastructure-Solutions/Container/Kubernetes/Networking/metallb/#install","text":"https://metallb.universe.tf/installation/ kubectl apply -f https://raw.githubusercontent.com/metallb/metallb/v0.10.2/manifests/namespace.yaml kubectl apply -f https://raw.githubusercontent.com/metallb/metallb/v0.10.2/manifests/metallb.yaml","title":"Install"},{"location":"DevOps/Infrastructure-Solutions/Container/Kubernetes/Networking/metallb/#config","text":"apiVersion : v1 kind : ConfigMap metadata : namespace : metallb - system name : config data : config : | address - pools : - name : default protocol : layer2 addresses : - 192.168 . 3.200 - 192.168 . 3.250","title":"config"},{"location":"DevOps/Infrastructure-Solutions/Container/Kubernetes/Tanzu-Kubernetes-Cluster/kubectl-vsphere/","text":"Kubectl vSphere \u2691 Usage \u2691 Login to a cluster `` Links \u2691","title":"Kubectl vSphere"},{"location":"DevOps/Infrastructure-Solutions/Container/Kubernetes/Tanzu-Kubernetes-Cluster/kubectl-vsphere/#kubectl-vsphere","text":"","title":"Kubectl vSphere"},{"location":"DevOps/Infrastructure-Solutions/Container/Kubernetes/Tanzu-Kubernetes-Cluster/kubectl-vsphere/#usage","text":"Login to a cluster ``","title":"Usage"},{"location":"DevOps/Infrastructure-Solutions/Container/Kubernetes/Tanzu-Kubernetes-Cluster/kubectl-vsphere/#links","text":"","title":"Links"},{"location":"DevOps/Infrastructure-Solutions/Container/Kubernetes/kubectl/CronJob/","text":"Test CronJob \u2691 kubectl create job --from=cronjob/cc-net-esa-wlc-flexconnect-check test-job-1","title":"Test CronJob"},{"location":"DevOps/Infrastructure-Solutions/Container/Kubernetes/kubectl/CronJob/#test-cronjob","text":"kubectl create job --from=cronjob/cc-net-esa-wlc-flexconnect-check test-job-1","title":"Test CronJob"},{"location":"DevOps/Infrastructure-Solutions/Container/Kubernetes/kubectl/busybox/","text":"kubectl run -i --tty --rm debug --image=busybox --restart=Never -- sh","title":"Busybox"},{"location":"DevOps/Infrastructure-Solutions/Container/Kubernetes/kubectl/delete/","text":"delete all pods from a namespace or a different query \u2691 kubectl get pods -n default | grep Error | cut -d' ' -f 1 | xargs kubectl delete pod","title":"delete all pods from a namespace or a different query"},{"location":"DevOps/Infrastructure-Solutions/Container/Kubernetes/kubectl/delete/#delete-all-pods-from-a-namespace-or-a-different-query","text":"kubectl get pods -n default | grep Error | cut -d' ' -f 1 | xargs kubectl delete pod","title":"delete all pods from a namespace or a different query"},{"location":"DevOps/Infrastructure-Solutions/Container/Kubernetes/kubectl/label/","text":"nodes \u2691 add node label \u2691 kubectl label node node01 node-role.kubernetes.io/name delete node label \u2691 kubectl label node node01 node-role.kubernetes.io/name-","title":"nodes"},{"location":"DevOps/Infrastructure-Solutions/Container/Kubernetes/kubectl/label/#nodes","text":"","title":"nodes"},{"location":"DevOps/Infrastructure-Solutions/Container/Kubernetes/kubectl/label/#add-node-label","text":"kubectl label node node01 node-role.kubernetes.io/name","title":"add node label"},{"location":"DevOps/Infrastructure-Solutions/Container/Kubernetes/kubectl/label/#delete-node-label","text":"kubectl label node node01 node-role.kubernetes.io/name-","title":"delete node label"},{"location":"DevOps/Infrastructure-Solutions/Container/Kubernetes/kubectl/serviceaccount/","text":"ServiceAccounts \u2691 deploy \u2691 gitlab-service-account.yml --- apiVersion: v1 kind: ServiceAccount metadata: name: gitlab-service-account --- apiVersion: rbac.authorization.k8s.io/v1beta1 kind: ClusterRoleBinding metadata: name: gitlab-service-account-role-binding roleRef: apiGroup: rbac.authorization.k8s.io kind: ClusterRole name: cluster-admin subjects: - kind: ServiceAccount name: gitlab-service-account namespace: default test local \u2691 kubectl get secrets | grep gitlab-service-account kubectl describe secret gitlab-service-account-token-.... export K8S_SERVER = \"https://10.24.70.26:6443\" export K8S_CLUSTER = \"gitlab-test\" export K8S_USER = \"gitlab-service-account\" export K8S_USER_TOKEN = \"\" kubectl config set-cluster $K8S_CLUSTER --server = $K8S_SERVER --insecure-skip-tls-verify = true kubectl config set-credentials $K8S_USER --token = $K8S_USER_TOKEN kubectl config set-context $K8S_CLUSTER --cluster = $K8S_CLUSTER --user = $K8S_USER kubectl config use-context $K8S_CLUSTER","title":"ServiceAccounts"},{"location":"DevOps/Infrastructure-Solutions/Container/Kubernetes/kubectl/serviceaccount/#serviceaccounts","text":"","title":"ServiceAccounts"},{"location":"DevOps/Infrastructure-Solutions/Container/Kubernetes/kubectl/serviceaccount/#deploy","text":"gitlab-service-account.yml --- apiVersion: v1 kind: ServiceAccount metadata: name: gitlab-service-account --- apiVersion: rbac.authorization.k8s.io/v1beta1 kind: ClusterRoleBinding metadata: name: gitlab-service-account-role-binding roleRef: apiGroup: rbac.authorization.k8s.io kind: ClusterRole name: cluster-admin subjects: - kind: ServiceAccount name: gitlab-service-account namespace: default","title":"deploy"},{"location":"DevOps/Infrastructure-Solutions/Container/Kubernetes/kubectl/serviceaccount/#test-local","text":"kubectl get secrets | grep gitlab-service-account kubectl describe secret gitlab-service-account-token-.... export K8S_SERVER = \"https://10.24.70.26:6443\" export K8S_CLUSTER = \"gitlab-test\" export K8S_USER = \"gitlab-service-account\" export K8S_USER_TOKEN = \"\" kubectl config set-cluster $K8S_CLUSTER --server = $K8S_SERVER --insecure-skip-tls-verify = true kubectl config set-credentials $K8S_USER --token = $K8S_USER_TOKEN kubectl config set-context $K8S_CLUSTER --cluster = $K8S_CLUSTER --user = $K8S_USER kubectl config use-context $K8S_CLUSTER","title":"test local"},{"location":"DevOps/Infrastructure-Solutions/Container/additional/Traefik/Excluding/","text":"services : whoami : image : \"traefik/whoami\" container_name : \"whoami-test\" labels : - \"traefik.enable=true\" - \"traefik.http.routers.whoami-test.rule=Host(`whoami-test.fritz.box`)\" - \"traefik.http.routers.whoami-test.entrypoints=http\" - \"traefik.http.routers.whoami-test.middlewares=intern_whitelist\" - \"traefik.http.middlewares.intern_whitelist.ipwhitelist.sourcerange=192.168.2.0/23\" - \"traefik.http.middlewares.intern_whitelist.ipwhitelist.ipstrategy.excludedips=192.168.2.1, 192.168.2.124\"","title":"Excluding"},{"location":"DevOps/Infrastructure-Solutions/Container/additional/Traefik/External%20Services/","text":"http : routers : intern : {} entryPoints : - \"http\" - \"https\" rule : \"Host(`HostRegexp(`fritz.box`, `{subdomain:[a-z]+}.fritz.box`, ...)`)\" pihole : entryPoints : - \"http\" - \"https\" rule : \"Host(`pihole.fritz.box`)\" service : pihole middlewares : - addprefix - pihole services : pihole : loadBalancer : servers : - url : \"http://192.168.2.19:80\" passHostHeader : true middlewares : addprefix - pihole : addPrefix : prefix : \"/admin\"","title":"External Services"},{"location":"Networking/Cumulus%20Linux/about-cumulus-linux/","text":"About Cumulus Linux \u2691","title":"About Cumulus Linux"},{"location":"Networking/Cumulus%20Linux/about-cumulus-linux/#about-cumulus-linux","text":"","title":"About Cumulus Linux"},{"location":"Networking/Virtualization/network-virtualization/","text":"Network Virtualization \u2691 Network virtualization is the carving up of a single physical network into many virtual networks. Virtualizing a resource allows it to be shared by multiple users. Sharing allows the efficient use of a resource when no single user can utilize the entire resource. Virtualization affords each user the illusion that they own the resource. In the case of virtual networks, each user is under the illusion that there are no other users of the network. To preserve the illusion, virtual networks are isolated from one another. Packets cannot accidentally leak from one virtual network to another. Links: \u2691 Network Virtualization","title":"Network Virtualization"},{"location":"Networking/Virtualization/network-virtualization/#network-virtualization","text":"Network virtualization is the carving up of a single physical network into many virtual networks. Virtualizing a resource allows it to be shared by multiple users. Sharing allows the efficient use of a resource when no single user can utilize the entire resource. Virtualization affords each user the illusion that they own the resource. In the case of virtual networks, each user is under the illusion that there are no other users of the network. To preserve the illusion, virtual networks are isolated from one another. Packets cannot accidentally leak from one virtual network to another.","title":"Network Virtualization"},{"location":"Networking/Virtualization/network-virtualization/#links","text":"Network Virtualization","title":"Links:"},{"location":"Networking/Virtualization/VXLAN/vxlan-general/","text":"VXLAN General \u2691 VXLAN (Virtual Extensible LAN) is a standard overlay protocol that abstracts logical virtual networks from the physical network underneath. With VXLAN simple and scalable layer 3 Clos architectures can be deployed, while extending layer 2 segments over that layer 3 network. VTEPs (VXLAN Tunnel Endpoints) are the tunnel edges. VXLAN uses a VLAN-like encapsulation technique to encapsulate MAC-based layer 2 Ethernet frames within layer 3 UDP packets Each virtual network is a VXLAN logical layer 2 segment. VXLAN scales to 16 million segments - a 24-bit VXLAN network identifier (VNI ID) in the VXLAN header - for multi-tenancy. In a large VXLAN deployment, two aspects need attention: 1. discovery of other endpoints (VTEPs) sharing the same VXLAN segments 2. avoidance of BUM frames (broadcast, unknown unicast and multicast) as they have to be forwarded to all VTEPs. On Cumulus Linux each VXLAN is locally configured using a bridge for local virtual interfaces. The bridge is taking care of the local MAC addresses (notably, using source-address learning) and the VXLAN interface takes care of the remote MAC addresses (received with BGP EVPN). Links: \u2691 Network Virtualization","title":"VXLAN General"},{"location":"Networking/Virtualization/VXLAN/vxlan-general/#vxlan-general","text":"VXLAN (Virtual Extensible LAN) is a standard overlay protocol that abstracts logical virtual networks from the physical network underneath. With VXLAN simple and scalable layer 3 Clos architectures can be deployed, while extending layer 2 segments over that layer 3 network. VTEPs (VXLAN Tunnel Endpoints) are the tunnel edges. VXLAN uses a VLAN-like encapsulation technique to encapsulate MAC-based layer 2 Ethernet frames within layer 3 UDP packets Each virtual network is a VXLAN logical layer 2 segment. VXLAN scales to 16 million segments - a 24-bit VXLAN network identifier (VNI ID) in the VXLAN header - for multi-tenancy. In a large VXLAN deployment, two aspects need attention: 1. discovery of other endpoints (VTEPs) sharing the same VXLAN segments 2. avoidance of BUM frames (broadcast, unknown unicast and multicast) as they have to be forwarded to all VTEPs. On Cumulus Linux each VXLAN is locally configured using a bridge for local virtual interfaces. The bridge is taking care of the local MAC addresses (notably, using source-address learning) and the VXLAN interface takes care of the remote MAC addresses (received with BGP EVPN).","title":"VXLAN General"},{"location":"Networking/Virtualization/VXLAN/vxlan-general/#links","text":"Network Virtualization","title":"Links:"},{"location":"Operating-Systems/Linux/X-Forwarding/","text":"X-Forwarding with Windows \u2691 Setup \u2691 Install VcXsrv Start XLaunch with enabled clipboard and monitor 0 Set the Windows environment variable DISPLAY=\"127.0.0.1:1.0\" Connect through SSH with the -Y argument. Linux script to check working connection. #!/usr/bin/env bash if ! timeout 3s xset q & >/dev/null ; then echo \"No X server at \\$DISPLAY [ $DISPLAY ]\" > & 2 exit 1 fi echo \"Seems to work :)\"","title":"X-Forwarding with Windows"},{"location":"Operating-Systems/Linux/X-Forwarding/#x-forwarding-with-windows","text":"","title":"X-Forwarding with Windows"},{"location":"Operating-Systems/Linux/X-Forwarding/#setup","text":"Install VcXsrv Start XLaunch with enabled clipboard and monitor 0 Set the Windows environment variable DISPLAY=\"127.0.0.1:1.0\" Connect through SSH with the -Y argument. Linux script to check working connection. #!/usr/bin/env bash if ! timeout 3s xset q & >/dev/null ; then echo \"No X server at \\$DISPLAY [ $DISPLAY ]\" > & 2 exit 1 fi echo \"Seems to work :)\"","title":"Setup"},{"location":"Operating-Systems/Linux/CLI/tee/","text":"Tee \u2691 With tee it is possible to read from standard input and write to standard output and files (or commands). Usage \u2691 Log into file and stdout: foo | tee output.file Append to a file: foo | tee -a output.file Include stderr: foo 2>&1 | tee output.file 2 > & 1 redirects channel 2 (stderr/standard error) into channel 1 (stdout/standard output), such that both is written as stdout","title":"Tee"},{"location":"Operating-Systems/Linux/CLI/tee/#tee","text":"With tee it is possible to read from standard input and write to standard output and files (or commands).","title":"Tee"},{"location":"Operating-Systems/Linux/CLI/tee/#usage","text":"Log into file and stdout: foo | tee output.file Append to a file: foo | tee -a output.file Include stderr: foo 2>&1 | tee output.file 2 > & 1 redirects channel 2 (stderr/standard error) into channel 1 (stdout/standard output), such that both is written as stdout","title":"Usage"},{"location":"Operating-Systems/Linux/CLI/watch/","text":"watch \u2691 Execute a program periodically, showing output in fullscreen. Usage \u2691 watch du -sh file Custom interval in seconds (defaults to every 2 seconds): watch -n 1 du -sh file","title":"watch"},{"location":"Operating-Systems/Linux/CLI/watch/#watch","text":"Execute a program periodically, showing output in fullscreen.","title":"watch"},{"location":"Operating-Systems/Linux/CLI/watch/#usage","text":"watch du -sh file Custom interval in seconds (defaults to every 2 seconds): watch -n 1 du -sh file","title":"Usage"},{"location":"Operating-Systems/Linux/Networking/Bridge%20Interface/","text":"Create a bridge interface \u2691 With iproute2 \u2691 Create a new bridge ip link add name bridge_name type bridge Set interface to state up ip link set bridge_name up Add an interface to the bridge (state of the interface must be up) ip link set eth0 master bridge_name Verify bridge bridge link Remove interace from a bridge ip link set eth0 nomaster Internet settings \u2691 Edit file /etc/systemd/network/mybridge.network [ Match ] Name = br0 [ Network ] DHCP = ipv4 Enable, start and reload systemd-networkd sudo systemctl enable systemd-networkd sudo systemctl start systemd-networkd sudo systemctl reload systemd-networkd","title":"Create a bridge interface"},{"location":"Operating-Systems/Linux/Networking/Bridge%20Interface/#create-a-bridge-interface","text":"","title":"Create a bridge interface"},{"location":"Operating-Systems/Linux/Networking/Bridge%20Interface/#with-iproute2","text":"Create a new bridge ip link add name bridge_name type bridge Set interface to state up ip link set bridge_name up Add an interface to the bridge (state of the interface must be up) ip link set eth0 master bridge_name Verify bridge bridge link Remove interace from a bridge ip link set eth0 nomaster","title":"With iproute2"},{"location":"Operating-Systems/Linux/Networking/Bridge%20Interface/#internet-settings","text":"Edit file /etc/systemd/network/mybridge.network [ Match ] Name = br0 [ Network ] DHCP = ipv4 Enable, start and reload systemd-networkd sudo systemctl enable systemd-networkd sudo systemctl start systemd-networkd sudo systemctl reload systemd-networkd","title":"Internet settings"},{"location":"Operating-Systems/Linux/PulseAudio/Volume/","text":"Raise microphone volume with pacmd pacmd set-source-volume alsa_input.usb-Burr-Brown_from_TI_USB_Audio_CODEC-00.analog-stereo 0x25000","title":"Volume"},{"location":"Operating-Systems/Linux/Window-Manager/i3/bluetooth/","text":"Bluetooth with i3 \u2691 Install blueman Launch the graphical settings with blueman-manager","title":"Bluetooth with i3"},{"location":"Operating-Systems/Linux/Window-Manager/i3/bluetooth/#bluetooth-with-i3","text":"Install blueman Launch the graphical settings with blueman-manager","title":"Bluetooth with i3"},{"location":"Operating-Systems/Linux/Window-Manager/i3/dpi/","text":"Change i3 DPI / scaling \u2691 put the following configuration into ~/.Xresources Xft.dpi: 150 load settings xrdb - merge ~/ . Xresources exec i3","title":"Change i3 DPI / scaling"},{"location":"Operating-Systems/Linux/Window-Manager/i3/dpi/#change-i3-dpi-scaling","text":"put the following configuration into ~/.Xresources Xft.dpi: 150 load settings xrdb - merge ~/ . Xresources exec i3","title":"Change i3 DPI / scaling"},{"location":"Operating-Systems/Linux/Window-Manager/i3/i3-wallpaper/","text":"Wallpaper in i3 \u2691 feh can be used to define a wallpaper. define the following in the i3 config file exec -- no - startup - id feh -- bg - scale -- random ~/ wallpaper /","title":"Wallpaper in i3"},{"location":"Operating-Systems/Linux/Window-Manager/i3/i3-wallpaper/#wallpaper-in-i3","text":"feh can be used to define a wallpaper. define the following in the i3 config file exec -- no - startup - id feh -- bg - scale -- random ~/ wallpaper /","title":"Wallpaper in i3"},{"location":"Operating-Systems/Linux/Window-Manager/i3/volume/","text":"Volume Control in i3 \u2691 A graphical control for PulseAudio is pavucontrol .","title":"Volume Control in i3"},{"location":"Operating-Systems/Linux/Window-Manager/i3/volume/#volume-control-in-i3","text":"A graphical control for PulseAudio is pavucontrol .","title":"Volume Control in i3"},{"location":"Other/20%20rules%20of%20formulating%20knowledge/","text":"20 rules of formulating knowledge \u2691 Effective learning: Twenty rules of formulating knowledge 1. Do not learn if you don't understand \u2691 2. Learn before you memorize \u2691 You need to build an overall picture of the learned knowledge in order to memorize it. Do not start from memorizing loosely related facts! 3. Build upon the basics \u2691 4. Stick to the minimum information principle \u2691 The material you learn must be formulated in as simple way at is is. 5. Cloze deletion is easy and effective \u2691 Cloze deletion is a sentence with its parts missing and replaced by three dots. 6. Use Imagery \u2691 7. Use mnemonic techniques \u2691 8. Graphic deletions is as good as cloze deletion \u2691 9. Avoid sets \u2691 10. Avoid enumeration \u2691 11. Combat interference \u2691 When you learn about similar things you often confuse them. You need to make items as unambiguous as possible. 12. Optimized wording \u2691 13. Refer to other memories \u2691 14. Personalize and provide examples \u2691 15. Rely on emotional states \u2691 16. Context cues simplify wording \u2691 17. Redundancy does not contradict minimum information principle \u2691 18. Provide sources \u2691 19. Provide data stamping \u2691 20 Prioritize \u2691 Summary \u2691 Do not learn if you do not understand Learn before you memorize - build the picture of the whole before you dismember it into simple items in SuperMemo. If the whole shows holes, review it again! Build upon the basics - never jump both feet into a complex manual because you may never see the end. Well remembered basics will help the remaining knowledge easily fit in Stick to the minimum information principle - if you continue forgetting an item, try to make it as simple as possible. If it does not help, see the remaining rules (cloze deletion, graphics, mnemonic techniques, converting sets into enumerations, etc.) Cloze deletion is easy and effective - completing a deleted word or phrase is not only an effective way of learning. Most of all, it greatly speeds up formulating knowledge and is highly recommended for beginners Use imagery - a picture is worth a thousand words Use mnemonic techniques - read about peg lists and mind maps. Study the books by Tony Buzan. Learn how to convert memories into funny pictures. You won't have problems with phone numbers and complex figures Graphic deletion is as good as cloze deletion - obstructing parts of a picture is great for learning anatomy, geography and more Avoid sets - larger sets are virtually un-memorizable unless you convert them into enumerations! Avoid enumerations - enumerations are also hard to remember but can be dealt with using cloze deletion Combat interference - even the simplest items can be completely intractable if they are similar to other items. Use examples, context cues, vivid illustrations, refer to emotions, and to your personal life Optimize wording - like you reduce mathematical equations, you can reduce complex sentences into smart, compact and enjoyable maxims Refer to other memories - building memories on other memories generates a coherent and hermetic structure that forgetting is less likely to affect. Build upon the basics and use planned redundancy to fill in the gaps Personalize and provide examples - personalization might be the most effective way of building upon other memories. Your personal life is a gold mine of facts and events to refer to. As long as you build a collection for yourself, use personalization richly to build upon well established memories Rely on emotional states - emotions are related to memories. If you learn a fact in the sate of sadness, you are more likely to recall it if when you are sad. Some memories can induce emotions and help you employ this property of the brain in remembering Context cues simplify wording - providing context is a way of simplifying memories, building upon earlier knowledge and avoiding interference Redundancy does not contradict minimum information principle - some forms of redundancy are welcome. There is little harm in memorizing the same fact as viewed from different angles. Passive and active approach is particularly practicable in learning word-pairs. Memorizing derivation steps in problem solving is a way towards boosting your intellectual powers! Provide sources - sources help you manage the learning process, updating your knowledge, judging its reliability, or importance Provide date stamping - time stamping is useful for volatile knowledge that changes in time Prioritize - effective learning is all about prioritizing. In incremental reading you can start from badly formulated knowledge and improve its shape as you proceed with learning (in proportion to the cost of inappropriate formulation). If need be, you can review pieces of knowledge again, split it into parts, reformulate, reprioritize, or delete. See also: Incremental reading , Devouring knowledge , Flow of knowledge , Using tasklists","title":"20 rules of formulating knowledge"},{"location":"Other/20%20rules%20of%20formulating%20knowledge/#20-rules-of-formulating-knowledge","text":"Effective learning: Twenty rules of formulating knowledge","title":"20 rules of formulating knowledge"},{"location":"Other/20%20rules%20of%20formulating%20knowledge/#1-do-not-learn-if-you-dont-understand","text":"","title":"1. Do not learn if you don't understand"},{"location":"Other/20%20rules%20of%20formulating%20knowledge/#2-learn-before-you-memorize","text":"You need to build an overall picture of the learned knowledge in order to memorize it. Do not start from memorizing loosely related facts!","title":"2. Learn before you memorize"},{"location":"Other/20%20rules%20of%20formulating%20knowledge/#3-build-upon-the-basics","text":"","title":"3. Build upon the basics"},{"location":"Other/20%20rules%20of%20formulating%20knowledge/#4-stick-to-the-minimum-information-principle","text":"The material you learn must be formulated in as simple way at is is.","title":"4. Stick to the minimum information principle"},{"location":"Other/20%20rules%20of%20formulating%20knowledge/#5-cloze-deletion-is-easy-and-effective","text":"Cloze deletion is a sentence with its parts missing and replaced by three dots.","title":"5. Cloze deletion is easy and effective"},{"location":"Other/20%20rules%20of%20formulating%20knowledge/#6-use-imagery","text":"","title":"6. Use Imagery"},{"location":"Other/20%20rules%20of%20formulating%20knowledge/#7-use-mnemonic-techniques","text":"","title":"7. Use mnemonic techniques"},{"location":"Other/20%20rules%20of%20formulating%20knowledge/#8-graphic-deletions-is-as-good-as-cloze-deletion","text":"","title":"8. Graphic deletions is as good as cloze deletion"},{"location":"Other/20%20rules%20of%20formulating%20knowledge/#9-avoid-sets","text":"","title":"9. Avoid sets"},{"location":"Other/20%20rules%20of%20formulating%20knowledge/#10-avoid-enumeration","text":"","title":"10. Avoid enumeration"},{"location":"Other/20%20rules%20of%20formulating%20knowledge/#11-combat-interference","text":"When you learn about similar things you often confuse them. You need to make items as unambiguous as possible.","title":"11. Combat interference"},{"location":"Other/20%20rules%20of%20formulating%20knowledge/#12-optimized-wording","text":"","title":"12. Optimized wording"},{"location":"Other/20%20rules%20of%20formulating%20knowledge/#13-refer-to-other-memories","text":"","title":"13. Refer to other memories"},{"location":"Other/20%20rules%20of%20formulating%20knowledge/#14-personalize-and-provide-examples","text":"","title":"14. Personalize and provide examples"},{"location":"Other/20%20rules%20of%20formulating%20knowledge/#15-rely-on-emotional-states","text":"","title":"15. Rely on emotional states"},{"location":"Other/20%20rules%20of%20formulating%20knowledge/#16-context-cues-simplify-wording","text":"","title":"16. Context cues simplify wording"},{"location":"Other/20%20rules%20of%20formulating%20knowledge/#17-redundancy-does-not-contradict-minimum-information-principle","text":"","title":"17. Redundancy does not contradict minimum information principle"},{"location":"Other/20%20rules%20of%20formulating%20knowledge/#18-provide-sources","text":"","title":"18. Provide sources"},{"location":"Other/20%20rules%20of%20formulating%20knowledge/#19-provide-data-stamping","text":"","title":"19. Provide data stamping"},{"location":"Other/20%20rules%20of%20formulating%20knowledge/#20-prioritize","text":"","title":"20 Prioritize"},{"location":"Other/20%20rules%20of%20formulating%20knowledge/#summary","text":"Do not learn if you do not understand Learn before you memorize - build the picture of the whole before you dismember it into simple items in SuperMemo. If the whole shows holes, review it again! Build upon the basics - never jump both feet into a complex manual because you may never see the end. Well remembered basics will help the remaining knowledge easily fit in Stick to the minimum information principle - if you continue forgetting an item, try to make it as simple as possible. If it does not help, see the remaining rules (cloze deletion, graphics, mnemonic techniques, converting sets into enumerations, etc.) Cloze deletion is easy and effective - completing a deleted word or phrase is not only an effective way of learning. Most of all, it greatly speeds up formulating knowledge and is highly recommended for beginners Use imagery - a picture is worth a thousand words Use mnemonic techniques - read about peg lists and mind maps. Study the books by Tony Buzan. Learn how to convert memories into funny pictures. You won't have problems with phone numbers and complex figures Graphic deletion is as good as cloze deletion - obstructing parts of a picture is great for learning anatomy, geography and more Avoid sets - larger sets are virtually un-memorizable unless you convert them into enumerations! Avoid enumerations - enumerations are also hard to remember but can be dealt with using cloze deletion Combat interference - even the simplest items can be completely intractable if they are similar to other items. Use examples, context cues, vivid illustrations, refer to emotions, and to your personal life Optimize wording - like you reduce mathematical equations, you can reduce complex sentences into smart, compact and enjoyable maxims Refer to other memories - building memories on other memories generates a coherent and hermetic structure that forgetting is less likely to affect. Build upon the basics and use planned redundancy to fill in the gaps Personalize and provide examples - personalization might be the most effective way of building upon other memories. Your personal life is a gold mine of facts and events to refer to. As long as you build a collection for yourself, use personalization richly to build upon well established memories Rely on emotional states - emotions are related to memories. If you learn a fact in the sate of sadness, you are more likely to recall it if when you are sad. Some memories can induce emotions and help you employ this property of the brain in remembering Context cues simplify wording - providing context is a way of simplifying memories, building upon earlier knowledge and avoiding interference Redundancy does not contradict minimum information principle - some forms of redundancy are welcome. There is little harm in memorizing the same fact as viewed from different angles. Passive and active approach is particularly practicable in learning word-pairs. Memorizing derivation steps in problem solving is a way towards boosting your intellectual powers! Provide sources - sources help you manage the learning process, updating your knowledge, judging its reliability, or importance Provide date stamping - time stamping is useful for volatile knowledge that changes in time Prioritize - effective learning is all about prioritizing. In incremental reading you can start from badly formulated knowledge and improve its shape as you proceed with learning (in proportion to the cost of inappropriate formulation). If need be, you can review pieces of knowledge again, split it into parts, reformulate, reprioritize, or delete. See also: Incremental reading , Devouring knowledge , Flow of knowledge , Using tasklists","title":"Summary"},{"location":"Other/DuckDNS%20update%20or%20set%20IP%20script/","text":"import json import urllib.request as requests config = { \"token\" : \"blabla\" , \"duck_domain\" : \"cloud-test\" , \"ipv4\" : True , \"ipv6\" : True } ipv4URL = 'https://ipv4.ipleak.net/json/' ipv6URL = 'https://ipv6.ipleak.net/json/' if config [ \"ipv4\" ]: request = requests . urlopen ( ipv4URL ) data = json . load ( request ) print ( f 'IPv4: { json . dumps ( data [ \"ip\" ], indent = 2 ) } ' ) request = requests . urlopen ( f 'https://www.duckdns.org/update?domains= { config [ \"duck_domain\" ] } &token= { config [ \"token\" ] } &ip= { data [ \"ip\" ] } ' ) if request . status != 200 : print ( request . msg ) if config [ \"ipv6\" ]: request = requests . urlopen ( ipv6URL ) data = json . load ( request ) print ( f 'IPv6: { json . dumps ( data [ \"ip\" ], indent = 2 ) } ' ) request = requests . urlopen ( f 'https://www.duckdns.org/update?domains= { config [ \"duck_domain\" ] } &token= { config [ \"token\" ] } &ipv6= { data [ \"ip\" ] } ' ) if request . status != 200 : print ( request . msg )","title":"DuckDNS update or set IP script"},{"location":"Other/digital-gardening/","text":"Digital Gardening \u2691 Links \u2691 How the blog broke the web","title":"Digital Gardening"},{"location":"Other/digital-gardening/#digital-gardening","text":"","title":"Digital Gardening"},{"location":"Other/digital-gardening/#links","text":"How the blog broke the web","title":"Links"},{"location":"Programming/general/stack/","text":"What is a stack? \u2691 A stack is a data structure used to store a collection of objects. Individual items can be added and stored in a stack using a push operation. Objects can be retrieved using a pop operation, which removes an item from the stack. When an object is added to a stack, it is placed on the top of all previously entered items. A stack in which items are removed from the top is considered a \"LIFO\" - Last in, First Out. In a \"FIFO\" - First In, First Out items are removed from the bottom.","title":"What is a stack?"},{"location":"Programming/general/stack/#what-is-a-stack","text":"A stack is a data structure used to store a collection of objects. Individual items can be added and stored in a stack using a push operation. Objects can be retrieved using a pop operation, which removes an item from the stack. When an object is added to a stack, it is placed on the top of all previously entered items. A stack in which items are removed from the top is considered a \"LIFO\" - Last in, First Out. In a \"FIFO\" - First In, First Out items are removed from the bottom.","title":"What is a stack?"},{"location":"Programming-Languages/Bash/","text":"Bash \u2691 It's very useful to use ShellCheck to check any shell code you write. Notes \u2691 The proper she-bang for Bash is #!/usr/bin/env bash . Links \u2691 Your ~/.bashrc doesn't have to be a mess","title":"Bash"},{"location":"Programming-Languages/Bash/#bash","text":"It's very useful to use ShellCheck to check any shell code you write.","title":"Bash"},{"location":"Programming-Languages/Bash/#notes","text":"The proper she-bang for Bash is #!/usr/bin/env bash .","title":"Notes"},{"location":"Programming-Languages/Bash/#links","text":"Your ~/.bashrc doesn't have to be a mess","title":"Links"},{"location":"Programming-Languages/JSON/","text":"JSON \u2691 Usage \u2691 Strings \u2691 { \"my_key\" : \"my_string\" } Integer and floats \u2691 { \"my_int\" : 2 , \"my_float\" : 3.5 } Array \u2691 { \"my_list\" : [ \"test\" , 5 , \"test3\" ] } Objects \u2691 { \"my_object\" : { \"name\" : \"Test Object\" , \"childs\" : [ { \"name\" : \"Child object 1\" } ] } } Links \u2691","title":"JSON"},{"location":"Programming-Languages/JSON/#json","text":"","title":"JSON"},{"location":"Programming-Languages/JSON/#usage","text":"","title":"Usage"},{"location":"Programming-Languages/JSON/#strings","text":"{ \"my_key\" : \"my_string\" }","title":"Strings"},{"location":"Programming-Languages/JSON/#integer-and-floats","text":"{ \"my_int\" : 2 , \"my_float\" : 3.5 }","title":"Integer and floats"},{"location":"Programming-Languages/JSON/#array","text":"{ \"my_list\" : [ \"test\" , 5 , \"test3\" ] }","title":"Array"},{"location":"Programming-Languages/JSON/#objects","text":"{ \"my_object\" : { \"name\" : \"Test Object\" , \"childs\" : [ { \"name\" : \"Child object 1\" } ] } }","title":"Objects"},{"location":"Programming-Languages/JSON/#links","text":"","title":"Links"},{"location":"Programming-Languages/YAML/","text":"YAML \u2691 YAML is commonly used for configuration files and in applications where data is being stored or transmitted. Filenames can end with .yaml or .yml . Usage \u2691 Strings \u2691 --- key : this is a string key : \"this is also a string\" key : | this is a multi-line string with line breaks key : > this a multi-line string withouth line breaks Integers and floats \u2691 --- integer : 595 float : 12.2 Lists \u2691 --- list1 : [ 1 , \"two\" , 3 ] list2 : - 1 - \"two\" - 3 Objects \u2691 --- my_obj : title : My Object description : This is a object childs : - test_obj : name : Test Object Comments \u2691 --- # this is a comment Links \u2691 YAML Tutorial: Everything You Need to Get Started in Minutes","title":"YAML"},{"location":"Programming-Languages/YAML/#yaml","text":"YAML is commonly used for configuration files and in applications where data is being stored or transmitted. Filenames can end with .yaml or .yml .","title":"YAML"},{"location":"Programming-Languages/YAML/#usage","text":"","title":"Usage"},{"location":"Programming-Languages/YAML/#strings","text":"--- key : this is a string key : \"this is also a string\" key : | this is a multi-line string with line breaks key : > this a multi-line string withouth line breaks","title":"Strings"},{"location":"Programming-Languages/YAML/#integers-and-floats","text":"--- integer : 595 float : 12.2","title":"Integers and floats"},{"location":"Programming-Languages/YAML/#lists","text":"--- list1 : [ 1 , \"two\" , 3 ] list2 : - 1 - \"two\" - 3","title":"Lists"},{"location":"Programming-Languages/YAML/#objects","text":"--- my_obj : title : My Object description : This is a object childs : - test_obj : name : Test Object","title":"Objects"},{"location":"Programming-Languages/YAML/#comments","text":"--- # this is a comment","title":"Comments"},{"location":"Programming-Languages/YAML/#links","text":"YAML Tutorial: Everything You Need to Get Started in Minutes","title":"Links"},{"location":"Programming-Languages/Go/Formatting/","text":"Formatting in Go \u2691 The Go development tools include a command, go fmt , which automatically reformats your code to match the standard format.","title":"Formatting in Go"},{"location":"Programming-Languages/Go/Formatting/#formatting-in-go","text":"The Go development tools include a command, go fmt , which automatically reformats your code to match the standard format.","title":"Formatting in Go"},{"location":"Programming-Languages/Go/Third-Party%20Tools%20or%20Libraries/","text":"Third-Party Tools or Libraries \u2691 no central hosted service share projects via their source code repositories e.g. go install github . com / rakyll / hey @latest","title":"Third-Party Tools or Libraries"},{"location":"Programming-Languages/Go/Third-Party%20Tools%20or%20Libraries/#third-party-tools-or-libraries","text":"no central hosted service share projects via their source code repositories e.g. go install github . com / rakyll / hey @latest","title":"Third-Party Tools or Libraries"},{"location":"Programming-Languages/Python/typing-in-python/","text":"Typing in Python \u2691 In Python typing can be optionally used. To check typing the standard tool is MyPy . Usage \u2691 Function annotations \u2691 def func ( arg : arg_type , optarg : arg_type = default ) -> return_type : ... For arguments the syntax is argument : annotation , while the return type is annotated using -> annotation . Note that the annotation must be a valid Python expression. Variable annotations \u2691 Sometimes the type checker needs help in figuring out the types of variables as well. The syntax is similar: pi : float = 3.142 def circumference ( radius : float ) -> float : return 2 * pi * radius ` Links \u2691 Real python article on type checking","title":"Typing in Python"},{"location":"Programming-Languages/Python/typing-in-python/#typing-in-python","text":"In Python typing can be optionally used. To check typing the standard tool is MyPy .","title":"Typing in Python"},{"location":"Programming-Languages/Python/typing-in-python/#usage","text":"","title":"Usage"},{"location":"Programming-Languages/Python/typing-in-python/#function-annotations","text":"def func ( arg : arg_type , optarg : arg_type = default ) -> return_type : ... For arguments the syntax is argument : annotation , while the return type is annotated using -> annotation . Note that the annotation must be a valid Python expression.","title":"Function annotations"},{"location":"Programming-Languages/Python/typing-in-python/#variable-annotations","text":"Sometimes the type checker needs help in figuring out the types of variables as well. The syntax is similar: pi : float = 3.142 def circumference ( radius : float ) -> float : return 2 * pi * radius `","title":"Variable annotations"},{"location":"Programming-Languages/Python/typing-in-python/#links","text":"Real python article on type checking","title":"Links"},{"location":"Programming-Languages/Python/venvs/","text":"Python Virtual Environments \u2691 Work with virtual environments \u2691 Create a virtual environment python3 -m virtualenv .venv or python3 -m venv .venv Links \u2691","title":"Python Virtual Environments"},{"location":"Programming-Languages/Python/venvs/#python-virtual-environments","text":"","title":"Python Virtual Environments"},{"location":"Programming-Languages/Python/venvs/#work-with-virtual-environments","text":"Create a virtual environment python3 -m virtualenv .venv or python3 -m venv .venv","title":"Work with virtual environments"},{"location":"Programming-Languages/Python/venvs/#links","text":"","title":"Links"},{"location":"Programming-Languages/Python/Python-Libraries/FastAPI/","text":"FastAPI \u2691","title":"FastAPI"},{"location":"Programming-Languages/Python/Python-Libraries/FastAPI/#fastapi","text":"","title":"FastAPI"},{"location":"Programming-Languages/Python/Python-Libraries/Pathlib/","text":"Pathlib \u2691 Usage \u2691 Get current path from pathlib import Path STATIC_FILES_DIR = Path ( __file__ ) . parent . absolute () Links \u2691","title":"Pathlib"},{"location":"Programming-Languages/Python/Python-Libraries/Pathlib/#pathlib","text":"","title":"Pathlib"},{"location":"Programming-Languages/Python/Python-Libraries/Pathlib/#usage","text":"Get current path from pathlib import Path STATIC_FILES_DIR = Path ( __file__ ) . parent . absolute ()","title":"Usage"},{"location":"Programming-Languages/Python/Python-Libraries/Pathlib/#links","text":"","title":"Links"},{"location":"Programming-Languages/Python/Python-Libraries/PyTest/","text":"PyTest \u2691 Mocks \u2691 For mocking with PyTest the unittest.mock library is used. Fixtures \u2691 Add parameters to fixtures \u2691 import json import pytest @pytest . fixture def json_loader (): \"\"\"Loads data from JSON file\"\"\" def _loader ( filename ): with open ( filename , 'r' ) as f : print ( filename ) data = json . load ( f ) return data return _loader def test_wrong_stop ( client , mocker , json_loader ): # Arrange get_mock = mocker . MagicMock () get_mock . status_code = 200 get_mock . json . return_value = json_loader ( cta_error_incorrect_stop_response . json ) mocker . patch . object ( backend . cta . requests , 'get' , return_value = get_mock , ) # Act response = client . simulate_get ( '/stops/106' ) # Assert assert response . status == falcon . HTTP_200 assert response . json == { 'error' : 'stop_id: 106 does not exist Links \u2691 Python Mocks 5 Part Series","title":"PyTest"},{"location":"Programming-Languages/Python/Python-Libraries/PyTest/#pytest","text":"","title":"PyTest"},{"location":"Programming-Languages/Python/Python-Libraries/PyTest/#mocks","text":"For mocking with PyTest the unittest.mock library is used.","title":"Mocks"},{"location":"Programming-Languages/Python/Python-Libraries/PyTest/#fixtures","text":"","title":"Fixtures"},{"location":"Programming-Languages/Python/Python-Libraries/PyTest/#add-parameters-to-fixtures","text":"import json import pytest @pytest . fixture def json_loader (): \"\"\"Loads data from JSON file\"\"\" def _loader ( filename ): with open ( filename , 'r' ) as f : print ( filename ) data = json . load ( f ) return data return _loader def test_wrong_stop ( client , mocker , json_loader ): # Arrange get_mock = mocker . MagicMock () get_mock . status_code = 200 get_mock . json . return_value = json_loader ( cta_error_incorrect_stop_response . json ) mocker . patch . object ( backend . cta . requests , 'get' , return_value = get_mock , ) # Act response = client . simulate_get ( '/stops/106' ) # Assert assert response . status == falcon . HTTP_200 assert response . json == { 'error' : 'stop_id: 106 does not exist","title":"Add parameters to fixtures"},{"location":"Programming-Languages/Python/Python-Libraries/PyTest/#links","text":"Python Mocks 5 Part Series","title":"Links"},{"location":"Programming-Languages/Rust/Memory%20Management/","text":"Heat \u2691 Stack \u2691","title":"Heat"},{"location":"Programming-Languages/Rust/Memory%20Management/#heat","text":"","title":"Heat"},{"location":"Programming-Languages/Rust/Memory%20Management/#stack","text":"","title":"Stack"},{"location":"Tools/Anki/","text":"Anki \u2691 Plugins \u2691 Decks \u2691 Links \u2691 How can we develop transformative tools for thought?","title":"Anki"},{"location":"Tools/Anki/#anki","text":"","title":"Anki"},{"location":"Tools/Anki/#plugins","text":"","title":"Plugins"},{"location":"Tools/Anki/#decks","text":"","title":"Decks"},{"location":"Tools/Anki/#links","text":"How can we develop transformative tools for thought?","title":"Links"},{"location":"Tools/Bitwarden/","text":"Bitwarden \u2691 Bitwarden is a open source password manager with cloud synchronization and the option to host the sync server on your own hardware. Links \u2691 Self hosting Bitwarden Password Manager","title":"Bitwarden"},{"location":"Tools/Bitwarden/#bitwarden","text":"Bitwarden is a open source password manager with cloud synchronization and the option to host the sync server on your own hardware.","title":"Bitwarden"},{"location":"Tools/Bitwarden/#links","text":"Self hosting Bitwarden Password Manager","title":"Links"},{"location":"Tools/HashiCorp-Vault/","text":"HashiCorp Vault \u2691 HashiCorp Vault can be used to store things like passwords, certificates and encryption keys. Usage \u2691 CLI \u2691 Login to a vault server with a token vault login -address=https://vault.net -method=token List kv entries vault kv list network/services Get a kv entry vault get network/services/ipam Links \u2691 Awesome Vault Tools","title":"HashiCorp Vault"},{"location":"Tools/HashiCorp-Vault/#hashicorp-vault","text":"HashiCorp Vault can be used to store things like passwords, certificates and encryption keys.","title":"HashiCorp Vault"},{"location":"Tools/HashiCorp-Vault/#usage","text":"","title":"Usage"},{"location":"Tools/HashiCorp-Vault/#cli","text":"Login to a vault server with a token vault login -address=https://vault.net -method=token List kv entries vault kv list network/services Get a kv entry vault get network/services/ipam","title":"CLI"},{"location":"Tools/HashiCorp-Vault/#links","text":"Awesome Vault Tools","title":"Links"},{"location":"Tools/KeepassXC/","text":"KeePassXC \u2691 KeePassXC is a open source password manager which uses a local password database file. To sync the database with different devices an external cloud service like Dropbox or OneDrive is needed. KeePassXC has the functionality to store SSH keys and inject the keys into the SSH agent. Links \u2691 Getting started Using KeePassXC to manage SSH keys Authentication","title":"KeePassXC"},{"location":"Tools/KeepassXC/#keepassxc","text":"KeePassXC is a open source password manager which uses a local password database file. To sync the database with different devices an external cloud service like Dropbox or OneDrive is needed. KeePassXC has the functionality to store SSH keys and inject the keys into the SSH agent.","title":"KeePassXC"},{"location":"Tools/KeepassXC/#links","text":"Getting started Using KeePassXC to manage SSH keys Authentication","title":"Links"},{"location":"Tools/MkDocs/","text":"MkDocs \u2691 MkDocs is a fast , simple and downright gorgeous static site generator that's geared towards building project documentation. Documentation source files are written in Markdown, and configured with a single YAML configuration file. -- https://www.mkdocs.org/ Usage \u2691 View the website local with: mkdocs serve . Build the website with: mkdocs build . The default export directory is ./site . Plugins \u2691 Links \u2691","title":"MkDocs"},{"location":"Tools/MkDocs/#mkdocs","text":"MkDocs is a fast , simple and downright gorgeous static site generator that's geared towards building project documentation. Documentation source files are written in Markdown, and configured with a single YAML configuration file. -- https://www.mkdocs.org/","title":"MkDocs"},{"location":"Tools/MkDocs/#usage","text":"View the website local with: mkdocs serve . Build the website with: mkdocs build . The default export directory is ./site .","title":"Usage"},{"location":"Tools/MkDocs/#plugins","text":"","title":"Plugins"},{"location":"Tools/MkDocs/#links","text":"","title":"Links"},{"location":"Tools/Task/","text":"Task \u2691 Task is a runner / built tool. The configuration is written in a Taskfile.yml Taskfile Template # https://taskfile.dev version : '3' vars : GREETING : Hello, World! tasks : default : cmds : - echo \"{{.GREETING}}\" silent : true Usage \u2691 Init a Taskfile template task --init List tasks task -l or task --list Use vars at global or task level vars : CONTAINER_NAME : wiki.rwxd.eu CURRENT_DIR : sh : pwd SITE_DIR : \"{{.CURRENT_DIR}}/site\" Links \u2691","title":"Task"},{"location":"Tools/Task/#task","text":"Task is a runner / built tool. The configuration is written in a Taskfile.yml Taskfile Template # https://taskfile.dev version : '3' vars : GREETING : Hello, World! tasks : default : cmds : - echo \"{{.GREETING}}\" silent : true","title":"Task"},{"location":"Tools/Task/#usage","text":"Init a Taskfile template task --init List tasks task -l or task --list Use vars at global or task level vars : CONTAINER_NAME : wiki.rwxd.eu CURRENT_DIR : sh : pwd SITE_DIR : \"{{.CURRENT_DIR}}/site\"","title":"Usage"},{"location":"Tools/Task/#links","text":"","title":"Links"},{"location":"Tools/cht.sh/","text":"cht.sh \u2691 Links \u2691 Installation Tab completion","title":"cht.sh"},{"location":"Tools/cht.sh/#chtsh","text":"","title":"cht.sh"},{"location":"Tools/cht.sh/#links","text":"Installation Tab completion","title":"Links"},{"location":"Tools/mermaid/","text":"Mermaid \u2691 sequenceDiagram Alice ->> John : Hello John , how are you ? loop Healthcheck John ->> John : Fight against hypochondria end Note right of John : Rational thoughts ! John -->> Alice : Great ! John ->> Bob : How about you ? Bob -->> John : Jolly good !","title":"Mermaid"},{"location":"Tools/mermaid/#mermaid","text":"sequenceDiagram Alice ->> John : Hello John , how are you ? loop Healthcheck John ->> John : Fight against hypochondria end Note right of John : Rational thoughts ! John -->> Alice : Great ! John ->> Bob : How about you ? Bob -->> John : Jolly good !","title":"Mermaid"},{"location":"Tools/spicetify/","text":"Change Spotify Theme with spicetify-cli \u2691 Install \u2691 Arch yay -S spicetify-cli usage \u2691 generate config spicetify apply config spicetify backup apply spicetify apply change theme spicetify config current_theme THEME_NAME change color scheme spicetify config color_scheme SCHEME_NAME help \u2691 when Spotify is installed through AUR sudo chmod a+wr /opt/spotify sudo chmod a+wr /opt/spotify/Apps -R Links \u2691 spicetify-cli spicetify themes","title":"Change Spotify Theme with spicetify-cli"},{"location":"Tools/spicetify/#change-spotify-theme-with-spicetify-cli","text":"","title":"Change Spotify Theme with spicetify-cli"},{"location":"Tools/spicetify/#install","text":"Arch yay -S spicetify-cli","title":"Install"},{"location":"Tools/spicetify/#usage","text":"generate config spicetify apply config spicetify backup apply spicetify apply change theme spicetify config current_theme THEME_NAME change color scheme spicetify config color_scheme SCHEME_NAME","title":"usage"},{"location":"Tools/spicetify/#help","text":"when Spotify is installed through AUR sudo chmod a+wr /opt/spotify sudo chmod a+wr /opt/spotify/Apps -R","title":"help"},{"location":"Tools/spicetify/#links","text":"spicetify-cli spicetify themes","title":"Links"},{"location":"Tools/Git/bfg-repo-cleaner/","text":"Clean Git repositories with BFG \u2691 With BFG large or troublesome files can be removed from a Git Repository Delete a file in a Git repository and force push changes. bfg --delete-files file.md git add . git push --force","title":"Clean Git repositories with BFG"},{"location":"Tools/Git/bfg-repo-cleaner/#clean-git-repositories-with-bfg","text":"With BFG large or troublesome files can be removed from a Git Repository Delete a file in a Git repository and force push changes. bfg --delete-files file.md git add . git push --force","title":"Clean Git repositories with BFG"},{"location":"Tools/Git/git/","text":"Git \u2691 Links \u2691 Write yourself a Git DIY Git in Python Git in Go","title":"Git"},{"location":"Tools/Git/git/#git","text":"","title":"Git"},{"location":"Tools/Git/git/#links","text":"Write yourself a Git DIY Git in Python Git in Go","title":"Links"},{"location":"Tools/Git/GitLab/access-tokens/","text":"GitLab Access Tokens \u2691 Clone \u2691 Clone with an access token git clone https://$project_name:$token@$gitlab/$project_path.git","title":"GitLab Access Tokens"},{"location":"Tools/Git/GitLab/access-tokens/#gitlab-access-tokens","text":"","title":"GitLab Access Tokens"},{"location":"Tools/Git/GitLab/access-tokens/#clone","text":"Clone with an access token git clone https://$project_name:$token@$gitlab/$project_path.git","title":"Clone"},{"location":"Tools/PlantUML/PlantUML%20Themes/","text":"PlantUML Themes \u2691 An overview of all available themes can be seen in the Theme Gallery . Usage \u2691 Set a theme @ startuml ! theme spacelab a -> b b -> c @ enduml Get all themes with help themes Links \u2691 plantuml.com/en/theme","title":"PlantUML Themes"},{"location":"Tools/PlantUML/PlantUML%20Themes/#plantuml-themes","text":"An overview of all available themes can be seen in the Theme Gallery .","title":"PlantUML Themes"},{"location":"Tools/PlantUML/PlantUML%20Themes/#usage","text":"Set a theme @ startuml ! theme spacelab a -> b b -> c @ enduml Get all themes with help themes","title":"Usage"},{"location":"Tools/PlantUML/PlantUML%20Themes/#links","text":"plantuml.com/en/theme","title":"Links"},{"location":"Tools/VS-Code/Plugins/","text":"VS Code Plugins \u2691 List \u2691 PlantUML Links \u2691 Best VS Code Extensions 2021 Awesome VS Code","title":"VS Code Plugins"},{"location":"Tools/VS-Code/Plugins/#vs-code-plugins","text":"","title":"VS Code Plugins"},{"location":"Tools/VS-Code/Plugins/#list","text":"PlantUML","title":"List"},{"location":"Tools/VS-Code/Plugins/#links","text":"Best VS Code Extensions 2021 Awesome VS Code","title":"Links"},{"location":"Tools/Vim/Comment%20out%20code/","text":"Comment out code with VIM \u2691 select the first character of your block press crtl + v (rectangular visual selectionn mode) type j for each line you want to be commented type shift + i (\"insert at start\") type # end with ESC","title":"Comment out code with VIM"},{"location":"Tools/Vim/Comment%20out%20code/#comment-out-code-with-vim","text":"select the first character of your block press crtl + v (rectangular visual selectionn mode) type j for each line you want to be commented type shift + i (\"insert at start\") type # end with ESC","title":"Comment out code with VIM"},{"location":"Tools/Vim/copy%20all/","text":"g g \" + y G %y +","title":"Copy all"}]}